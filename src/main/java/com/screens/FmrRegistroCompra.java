/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.Articulo;
import com.clases.Compra;
import com.clases.DetalleCompra;
import com.clases.PedidosDevueltos;
import com.dao.ArticuloJpaController;
import com.dao.CompraJpaController;
import com.dao.DetalleCompraJpaController;
import com.dao.PedidosDevueltosJpaController;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRSaveContributor;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author david
 */
public class FmrRegistroCompra extends javax.swing.JFrame {
    
    DefaultTableModel t;
    
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");

    CompraJpaController daoCompra = new CompraJpaController();
    ArticuloJpaController daoArticulo = new ArticuloJpaController();
    DetalleCompraJpaController  daoDetalleCompra = new DetalleCompraJpaController();
    PedidosDevueltosJpaController daoPD = new PedidosDevueltosJpaController();
    static Logs log = new Logs();
    Compra objCompra = new Compra();   
    Articulo objArticulo = new Articulo(); 
    DetalleCompra ojbDetalleCompra = new DetalleCompra();
    PedidosDevueltos objPD = new PedidosDevueltos();
    NombreEmpleado N = new NombreEmpleado();
    
    boolean Concretada;
    
    public FmrRegistroCompra() {
        initComponents();
        this.setLocationRelativeTo(null);
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        ActualizarComprasConcretadas(buscarIdCompra(""));
        Concretada = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tbl_Articulos = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_Compra = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Btn_Concretadas = new javax.swing.JButton();
        Btn_Anuladas = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Txt_IdCompra = new javax.swing.JTextField();
        Btn_Buscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        Btn_Regresar = new javax.swing.JButton();
        Btn_AnularCompra = new javax.swing.JButton();
        Btn_Imprimir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Txt_Descripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de Compras - Microcosmos");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 100));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LogoMicrocosmos.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(60, 63, 65));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(800, 230));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 230));

        Tbl_Articulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Articulos", "Precio Compra", "Cantidad", "Total"
            }
        ));
        Tbl_Articulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_ArticulosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tbl_Articulos);
        if (Tbl_Articulos.getColumnModel().getColumnCount() > 0) {
            Tbl_Articulos.getColumnModel().getColumn(0).setMaxWidth(35);
            Tbl_Articulos.getColumnModel().getColumn(2).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(3).setMaxWidth(70);
            Tbl_Articulos.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        Tbl_Compra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Total", "Fecha Pedido", "Fecha Recibido", "Proveedor", "Empleado", "Estado"
            }
        ));
        Tbl_Compra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_CompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tbl_Compra);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Art√≠culos");
        jLabel14.setMaximumSize(new java.awt.Dimension(265, 25));
        jLabel14.setMinimumSize(new java.awt.Dimension(265, 25));
        jLabel14.setPreferredSize(new java.awt.Dimension(265, 25));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Compras Realizadas");
        jLabel15.setMaximumSize(new java.awt.Dimension(265, 25));
        jLabel15.setMinimumSize(new java.awt.Dimension(265, 25));
        jLabel15.setPreferredSize(new java.awt.Dimension(265, 25));

        jPanel3.setBackground(new java.awt.Color(60, 63, 65));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(240, 240, 240), 1, true), "MOSTRAR COMPRAS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(240, 240, 240))); // NOI18N
        jPanel3.setToolTipText("");

        Btn_Concretadas.setText("Concretadas");
        Btn_Concretadas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Concretadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ConcretadasActionPerformed(evt);
            }
        });

        Btn_Anuladas.setText("Anuladas");
        Btn_Anuladas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Anuladas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AnuladasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(Btn_Concretadas, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(Btn_Anuladas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Btn_Concretadas, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(Btn_Anuladas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(60, 63, 65));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(240, 240, 240), 1, true), "BUSCAR COMPRAS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(240, 240, 240))); // NOI18N

        Txt_IdCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_IdCompraKeyTyped(evt);
            }
        });

        Btn_Buscar.setText("Buscar");
        Btn_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("ID Compra");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Txt_IdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(Btn_Buscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_IdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Buscar)
                    .addComponent(jLabel2))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(268, 268, 268))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(60, 63, 65));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setMaximumSize(new java.awt.Dimension(800, 130));
        jPanel4.setMinimumSize(new java.awt.Dimension(800, 130));

        jPanel6.setBackground(new java.awt.Color(60, 63, 65));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240)), "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(240, 240, 240))); // NOI18N

        Btn_Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/return.png"))); // NOI18N
        Btn_Regresar.setText("Regresar");
        Btn_Regresar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Regresar.setFocusPainted(false);
        Btn_Regresar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarActionPerformed(evt);
            }
        });

        Btn_AnularCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Anular.png"))); // NOI18N
        Btn_AnularCompra.setText("Anular Compra");
        Btn_AnularCompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_AnularCompra.setFocusPainted(false);
        Btn_AnularCompra.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_AnularCompra.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_AnularCompra.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_AnularCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AnularCompraActionPerformed(evt);
            }
        });

        Btn_Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir.png"))); // NOI18N
        Btn_Imprimir.setText("Reporte");
        Btn_Imprimir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Btn_Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_AnularCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Regresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_AnularCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        Txt_Descripcion.setColumns(20);
        Txt_Descripcion.setRows(5);
        Txt_Descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_DescripcionKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(Txt_Descripcion);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Descripci√≥n");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tbl_CompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_CompraMouseClicked

        int fila =  Tbl_Compra.getSelectedRow();
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
                       
        }else{
        
        ActualizarArticulo(buscarArticulos(Tbl_Compra.getValueAt(fila, 0).toString()));
              
        
        }
        
    }//GEN-LAST:event_Tbl_CompraMouseClicked

    private void Btn_AnularCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AnularCompraActionPerformed

        int fila = Tbl_Compra.getSelectedRow();

        if(fila != -1){

            if(Txt_Descripcion.getText().length() < 8){
            
                JOptionPane.showMessageDialog(this, "La descripci√≥n debe de contener al menos 8 letras","Error",JOptionPane.ERROR_MESSAGE);
            
            }else if(validacionLetrasRepetidas(Txt_Descripcion.getText()) == false){
            
                JOptionPane.showMessageDialog(this, "No se pueden repetir 3 letras seguidas","Error",JOptionPane.ERROR_MESSAGE);
            
            }else{
            try{
            EditarCompra();
            LlenarPedidosDevueltos();
            ActualizarStock();
            LimpiarArticulos();
            ActualizarComprasConcretadas(buscarIdCompra(""));
            } catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al anular: " + ex);
          
        }
            }
            

        }else{

            JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento a Anular");

        }  
        
    }//GEN-LAST:event_Btn_AnularCompraActionPerformed

    public boolean validacionLetrasRepetidas(String cadena)
    {
        String patron = "^(\\d|(([A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s])\\3?(?!\\3)))+$";
        Pattern patt = Pattern.compile(patron);
        Matcher comparador = patt.matcher(cadena);
        
        if (!comparador.matches()) {
            
            return false;
            
        } else {
            
            return true;
        }
    }
    
    
    
    
    private void Btn_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarActionPerformed
 
        FmrCompras Com = new FmrCompras();
        Com.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarActionPerformed

    private void Tbl_ArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_ArticulosMouseClicked
        
               
             
    }//GEN-LAST:event_Tbl_ArticulosMouseClicked

    private void Btn_AnuladasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AnuladasActionPerformed

        try{
        ActualizarComprasAnuladas(buscarIdPedidosDevueltos(""));
        Btn_AnularCompra.setEnabled(false);
        LimpiarArticulos();
        Concretada = false;
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al mostrar en pantalla: " + ex);
          
        }
        
    }//GEN-LAST:event_Btn_AnuladasActionPerformed

    private void Btn_ConcretadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ConcretadasActionPerformed

        try{
        ActualizarComprasConcretadas(buscarIdCompra(""));
        Btn_AnularCompra.setEnabled(true);
        LimpiarArticulos();
        Concretada = true;
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al mostrar en pantalla: " + ex);
          
        }
        
    }//GEN-LAST:event_Btn_ConcretadasActionPerformed

    private void Btn_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarActionPerformed
        
        if(Concretada == true){
        
            ActualizarComprasConcretadas(buscarIdCompra(Txt_IdCompra.getText()));
            Txt_IdCompra.setText("");
        
        }else{
        
            ActualizarComprasAnuladas(buscarIdPedidosDevueltos(Txt_IdCompra.getText()));
            Txt_IdCompra.setText("");
            
        }
        
    }//GEN-LAST:event_Btn_BuscarActionPerformed

    private void Txt_IdCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_IdCompraKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_IdCompra.getText();
        
        if(c < '0' || c > '9') {
        
            evt.consume();
                    
        }

        if((evt.getKeyChar() == 22)){

            Txt_IdCompra.setText(Texto.substring(0, 8));

        }

        if (Txt_IdCompra.getText().length() >= 8){

            evt.consume();

        }
        
    }//GEN-LAST:event_Txt_IdCompraKeyTyped

    private void Txt_DescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_DescripcionKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_Descripcion.getText();
        
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Descripcion.setText(Texto.substring(0, 99));
                    
        }
        
        if (Txt_Descripcion.getText().length() >= 99){
        
        evt.consume();
        
        }
        
        if (Txt_Descripcion.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_Descripcion.setText(Texto);

        }
        
    }//GEN-LAST:event_Txt_DescripcionKeyTyped

    private void Btn_ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ImprimirActionPerformed

        try{
        GenerarReporte();
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al generar reporte: " + ex);
          
        }
    }//GEN-LAST:event_Btn_ImprimirActionPerformed

    
    private void ActualizarComprasConcretadas(List<Compra> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Compra.setModel(t);
            t.addColumn("Id");
            t.addColumn("Proveedor");
            t.addColumn("Fecha Pedido");
            t.addColumn("Fecha Recibido");
            t.addColumn("Empleado");
            t.addColumn("Estado");
            t.addColumn("Total Pagado");
            
        
            List<Compra> compra = lista;
        
          
            for(Compra Compra : compra){
               
                 if(Compra.getIdEstado() == 2){
                 
                    t.addRow(
                    new Object[]{
                        
                        Compra.getIdCompra(),
                        GetNombreProveedor(Compra.getIdProveedor()),
                        MostrarFecha(Compra.getFechaPedido().toString()),
                        MostrarFecha(Compra.getFechaRecibido().toString()),
                        GetNombreEmpleado(Compra.getIdEmpleados()),
                        GetNombreEstado(Compra.getIdEstado()),
                        Compra.getTotalCompra()
                                          
                    });
                                 
                 }
                

            }
       
       
       }
    
    
    private void ActualizarComprasAnuladas(List<PedidosDevueltos> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Compra.setModel(t);
            t.addColumn("ID Compra");
            t.addColumn("Empleado");
            t.addColumn("Fecha Anulaci√≥n");
            t.addColumn("Descripci√≥n");
            
        
            List<PedidosDevueltos> pedidosDevueltos = lista;
        
          
            for(PedidosDevueltos PedidosDevueltos : pedidosDevueltos){
               
                 
                 
                    t.addRow(
                    new Object[]{
                        
                        PedidosDevueltos.getIdCompra(),
                        GetNombreEmpleado(PedidosDevueltos.getIdEmpleados()),                        
                        MostrarFecha(PedidosDevueltos.getFechaAnulacion().toString()),
                        PedidosDevueltos.getDescripcion()
                                          
                    });
                                 
                 
                

            }
       
       
       }
    
    public List<Compra> buscarIdCompra(String ID){
       
           Compra c;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select c From Compra c WHERE idCompra LIKE '"+ ID +"%'";
           Query query = em.createQuery(select);
           List<Compra> lista = query.getResultList();
           return lista;
           
       }
    
    
    private void ActualizarArticulo(List<DetalleCompra> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Articulos.setModel(t);
            t.addColumn("Id");
            t.addColumn("Art√≠culo");
            t.addColumn("Precio Compra");
            t.addColumn("Cantidad");
            t.addColumn("Total");         
        
            List<DetalleCompra> detalleCompra = lista;
        
            double s;
            for(DetalleCompra DetalleCompra : detalleCompra){
               
                   s = (DetalleCompra.getPrecioCompra()*DetalleCompra.getCantidad());
                           
                    t.addRow(
                    new Object[]{
                        
                        DetalleCompra.getIdArticulo(),
                        GetNombreArticulo(DetalleCompra.getIdArticulo()),
                        DetalleCompra.getPrecioCompra(),
                        DetalleCompra.getCantidad(),
                        s
                        
                                          
                    });
                                 
            }
    }
    
    
    
    public List<DetalleCompra> buscarArticulos(String ID){
       
           DetalleCompra d;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select d From DetalleCompra d WHERE idCompra = '"+ ID +"%'";
           Query query = em.createQuery(select);
           List<DetalleCompra> lista = query.getResultList();
           return lista;
           
       }
    
    public List<PedidosDevueltos> buscarIdPedidosDevueltos(String ID){
       
           PedidosDevueltos p;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select p From PedidosDevueltos p WHERE idCompra LIKE '"+ ID +"%'";
           Query query = em.createQuery(select);
           List<PedidosDevueltos> lista = query.getResultList();
           return lista;
           
       }
    
    
    private static String GetNombreEstado(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreEstado FROM Estado WHERE idEstado = '"+ id+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
    
    
    private static String GetNombreArticulo(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreArticulo FROM Articulo WHERE idArticulo = '"+ id+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 

    
     private static String GetNombreProveedor(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreProveedor FROM Proveedores WHERE idProveedor = '"+ id+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
     
     private static String GetNombreEmpleado(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreEmpleado FROM Empleados WHERE idEmpleados = '"+ id+ "'";
              String select2 = "SELECT apellidoEmpleado FROM Empleados WHERE idEmpleados = '"+ id+ "'";
              Query query = em.createQuery(select);
              Query query2 = em.createQuery(select2);
    
              return query.getSingleResult().toString()+" "+query2.getSingleResult().toString() ;
                           
            
          } 
     
     public static String MostrarFecha(String f){
         
        String dia = f.substring(0, 4);
        String mes = f.substring(5, 7);
        String a√±o = f.substring(8, 10);
        String hora = f.substring(11, 19);
        
        return a√±o+"/"+mes+"/"+dia +" "+hora;
    
    }
    
     private void ActualizarStock(){
     
        int fila = Tbl_Articulos.getRowCount();
        t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        ReducirStock(t.getValueAt(i, 0).toString(), t.getValueAt(i, 3).toString());
                   
        }

       
        
     }
     
        public void ReducirStock(String IdArticulo, String Cantidad){
       
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
         EntityManager em = emf.createEntityManager();
      
             em.getTransaction().begin();
             String select = "UPDATE Articulo SET stock = (stock - "+Cantidad+") WHERE idArticulo = '"+ IdArticulo+"'"; 
             Query query = em.createQuery(select);
             query.executeUpdate();
             em.getTransaction().commit();
             em.close();
       
       
       }
    
        
      private void LimpiarArticulos(){
     
        int fila = Tbl_Articulos.getRowCount();
        t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        t.removeRow(i);
                   
        }

        Txt_Descripcion.setText("");
        Txt_IdCompra.setText("");
        
     }
        
     private void EditarCompra(){
            
            int fila = Tbl_Compra.getSelectedRow();
                          
            objCompra.setIdCompra(Integer.parseInt(Tbl_Compra.getValueAt(fila, 0).toString()));
            objCompra.setTotalCompra(Double.parseDouble(Tbl_Compra.getValueAt(fila, 6).toString()));
            objCompra.setFechaPedido(Timestamp.valueOf(GuardarFecha(Tbl_Compra.getValueAt(fila, 2).toString())+ " 00:00:00"));
            objCompra.setFechaRecibido(Timestamp.valueOf(GuardarFecha(Tbl_Compra.getValueAt(fila, 3).toString())+ " 00:00:00"));
            objCompra.setIdProveedor(GetIdProveedor(Tbl_Compra.getValueAt(fila, 1).toString()));
            objCompra.setIdEmpleados(GetIdEmpleado(Tbl_Compra.getValueAt(fila, 0).toString()));
            objCompra.setIdEstado(1);               
  
            
        try {
            
            daoCompra.edit(objCompra);
            
          } catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al editar: " + ex);
          
        }
        
       }  
     
     private void LlenarPedidosDevueltos(){
            
            int fila = Tbl_Compra.getSelectedRow();
                          
            objPD.setIdEmpleados(N.getId());
            objPD.setIdCompra(Integer.parseInt(Tbl_Compra.getValueAt(fila, 0).toString()));
            objPD.setFechaAnulacion(Timestamp.valueOf(fecha_Hora_Actual()));
            objPD.setDescripcion(Txt_Descripcion.getText());
            
        try {
            
            daoPD.create(objPD);
            
          } catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al llenar pedido: " + ex);
          
        }
        
       } 
     
     
    public static String fecha_Hora_Actual(){
            
    Date fecha = new Date();
    SimpleDateFormat formatofecha = new SimpleDateFormat("YYYY-MM-dd");
    
    LocalTime hora = LocalTime.now();
    
    String FechaCompleta = formatofecha.format(fecha)+" "+hora.toString().substring(0,8) ; 
    return FechaCompleta;
    
    }
     
     
     private static int GetIdProveedor(String Nombre){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idProveedor FROM Proveedores WHERE nombreProveedor = '"+ Nombre+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }
     
     private static int GetIdEmpleado(String id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idEmpleados FROM Compra WHERE idCompra = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }
     
     
     
       public static String GuardarFecha(String f){
        
        
        //  21/03/1999
         
        String dia = f.substring(0, 2);
        String mes = f.substring(3, 5);
        String a√±o = f.substring(6, 10);
        
        return a√±o+"-"+mes+"-"+dia;
        
    
    }
           
       private void GenerarReporte(){
       
        
             Connection con;
             
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            
        try{
        
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Microcosmos?zeroDateTimeBehavior=convertToNull", "root", "12345");
        
        JasperReport report = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/ReporteCompra.jasper"));
        
        Map parametros = new HashMap<String, Object>();
        
        parametros.put("Empleado", N.getNombre());
   
        JasperPrint jprint = JasperFillManager.fillReport(report,parametros, con );
        JasperViewer view = new JasperViewer(jprint,false);
        view.setTitle("Reporte Articulos");
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        view.setIconImage(icon);
        

        final JRViewer viewer = new JRViewer(jprint);
            JRSaveContributor[] contrbs = viewer.getSaveContributors();

            for (JRSaveContributor saveContributor : contrbs)
            {
                if (!(saveContributor instanceof net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor
                    || saveContributor instanceof net.sf.jasperreports.view.save.JRPdfSaveContributor))
            viewer.removeSaveContributor(saveContributor);
        }
        view.setContentPane(viewer);
        view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        view.setVisible(true);
        

        view.show();

      
    }catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al generar reporte: " + ex);
          
        }
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroCompra", "Error al generar reporte: " + ex);
          
        }
                
          }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmrRegistroCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Anuladas;
    private javax.swing.JButton Btn_AnularCompra;
    private javax.swing.JButton Btn_Buscar;
    private javax.swing.JButton Btn_Concretadas;
    private javax.swing.JButton Btn_Imprimir;
    private javax.swing.JButton Btn_Regresar;
    private javax.swing.JTable Tbl_Articulos;
    private javax.swing.JTable Tbl_Compra;
    private javax.swing.JTextArea Txt_Descripcion;
    private javax.swing.JTextField Txt_IdCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
