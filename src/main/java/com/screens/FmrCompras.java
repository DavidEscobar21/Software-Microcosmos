/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.Articulo;
import com.clases.Compra;
import com.clases.DetalleCompra;
import com.clases.Proveedores;
import com.clases.Venta;
import com.dao.ArticuloJpaController;
import com.dao.CompraJpaController;
import com.dao.DetalleCompraJpaController;
import java.awt.Image;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ariel
 */
public class FmrCompras extends javax.swing.JFrame {
    
    DefaultTableModel t;

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
  
    ArticuloJpaController daoArticulo = new ArticuloJpaController();
    CompraJpaController daoCompra = new CompraJpaController();
    DetalleCompraJpaController daoDetalleCompra = new DetalleCompraJpaController();   
    static Logs log = new Logs();
    Articulo objArticulo = new Articulo();    
    Compra objCompra = new Compra();
    DetalleCompra objDetalleCompra = new DetalleCompra();
    NombreEmpleado N = new NombreEmpleado();
    
    public FmrCompras() {
        initComponents();
        this.setLocationRelativeTo(null);
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        ActualizarArticulo();
        Btn_Agregar.setEnabled(false);
        Btn_Eliminar.setEnabled(false);
        Txt_TotalPago.setText("0.0");
        RestringirPermisos(ValidarGenerarCompra(N.id),ValidarMostrarCompras(N.id),ValidarBuscar(N.id));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Txt_Documento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Txt_IdArticulo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Btn_Buscar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Txt_NombreArticulo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Txt_FechaPedido = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Txt_PrecioCompra = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Txt_Cantidad = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Txt_FechaRecibido = new javax.swing.JTextField();
        Btn_BuscarIdProducto = new javax.swing.JButton();
        Btn_BuscarNombreArticulo = new javax.swing.JButton();
        Btn_Agregar = new javax.swing.JButton();
        Btn_Eliminar = new javax.swing.JButton();
        Txt_BuscarProveedor = new javax.swing.JTextField();
        Btn_BuscarProveedor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tbl_Articulos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tbl_compra = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Txt_TotalPago = new javax.swing.JTextField();
        Btn_Regresar = new javax.swing.JButton();
        Btn_GenerarCompra = new javax.swing.JButton();
        Btn_Cancelar = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        Btn_MostrarCompras = new javax.swing.JButton();
        Txt_NombreProveedor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compras - Microcosmos");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setToolTipText("");
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("MICROCOSMOS");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(60, 63, 65));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(800, 230));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 230));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setVerifyInputWhenFocusTarget(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Documento Proveedor");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_Documento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Txt_DocumentoFocusLost(evt);
            }
        });
        Txt_Documento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_DocumentoActionPerformed(evt);
            }
        });
        Txt_Documento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_DocumentoKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Nombre Proveedor");
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("ID Artículo");
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_IdArticulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Txt_IdArticuloFocusLost(evt);
            }
        });
        Txt_IdArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_IdArticuloActionPerformed(evt);
            }
        });
        Txt_IdArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_IdArticuloKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Ingresar Datos");
        jLabel6.setMaximumSize(new java.awt.Dimension(299, 41));
        jLabel6.setMinimumSize(new java.awt.Dimension(299, 41));
        jLabel6.setPreferredSize(new java.awt.Dimension(299, 41));

        Btn_Buscar.setText("Buscar");
        Btn_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Nombre Artículo");
        jLabel8.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_NombreArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NombreArticuloKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Precio Compra");
        jLabel10.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_FechaPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_FechaPedidoKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Fecha Pedido");
        jLabel16.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_PrecioCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_PrecioCompraKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Cantidad");
        jLabel17.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_Cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_CantidadKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Fecha Recibido");
        jLabel20.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_FechaRecibido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_FechaRecibidoKeyTyped(evt);
            }
        });

        Btn_BuscarIdProducto.setText("Buscar");
        Btn_BuscarIdProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarIdProductoActionPerformed(evt);
            }
        });

        Btn_BuscarNombreArticulo.setText("Buscar");
        Btn_BuscarNombreArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarNombreArticuloActionPerformed(evt);
            }
        });

        Btn_Agregar.setText("Agregar");
        Btn_Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AgregarActionPerformed(evt);
            }
        });

        Btn_Eliminar.setText("Eliminar");
        Btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EliminarActionPerformed(evt);
            }
        });

        Txt_BuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_BuscarProveedorActionPerformed(evt);
            }
        });

        Btn_BuscarProveedor.setText("Buscar");
        Btn_BuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_IdArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_BuscarIdProducto)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_NombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_BuscarNombreArticulo)
                        .addGap(45, 45, 45)
                        .addComponent(Btn_Agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Txt_Documento, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Btn_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Txt_Cantidad, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Txt_PrecioCompra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Txt_BuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Txt_FechaPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                            .addComponent(Txt_FechaRecibido)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_BuscarProveedor)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Txt_Documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_Buscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Txt_PrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Txt_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Txt_FechaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Txt_FechaRecibido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Txt_IdArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Btn_BuscarIdProducto)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Txt_NombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Btn_BuscarNombreArticulo)
                                    .addComponent(Btn_Agregar)
                                    .addComponent(Btn_Eliminar))))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_BuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_BuscarProveedor))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(338, 338, 338))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(406, 406, 406))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Tbl_Articulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Artículo", "Precio", "Stock", "Talla"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl_Articulos.getTableHeader().setReorderingAllowed(false);
        Tbl_Articulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_ArticulosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Tbl_Articulos);
        if (Tbl_Articulos.getColumnModel().getColumnCount() > 0) {
            Tbl_Articulos.getColumnModel().getColumn(0).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(1).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(2).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(3).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(4).setResizable(false);
        }

        Tbl_compra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Artículo", "Talla", "Precio Compra", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl_compra.getTableHeader().setReorderingAllowed(false);
        Tbl_compra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_compraMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tbl_compra);
        if (Tbl_compra.getColumnModel().getColumnCount() > 0) {
            Tbl_compra.getColumnModel().getColumn(0).setMaxWidth(35);
            Tbl_compra.getColumnModel().getColumn(1).setMaxWidth(120);
            Tbl_compra.getColumnModel().getColumn(2).setMaxWidth(40);
            Tbl_compra.getColumnModel().getColumn(3).setMaxWidth(100);
            Tbl_compra.getColumnModel().getColumn(4).setMaxWidth(70);
            Tbl_compra.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jPanel3.setBackground(new java.awt.Color(60, 63, 65));

        Txt_TotalPago.setEditable(false);
        Txt_TotalPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_TotalPagoActionPerformed(evt);
            }
        });

        Btn_Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/return.png"))); // NOI18N
        Btn_Regresar.setText("Regresar");
        Btn_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarActionPerformed(evt);
            }
        });

        Btn_GenerarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Registrar Compra.png"))); // NOI18N
        Btn_GenerarCompra.setText("Registrar Compra");
        Btn_GenerarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_GenerarCompraActionPerformed(evt);
            }
        });

        Btn_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Cancelar.png"))); // NOI18N
        Btn_Cancelar.setText("Cancelar");
        Btn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CancelarActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Total a pagar");
        jLabel19.setPreferredSize(new java.awt.Dimension(80, 20));

        Btn_MostrarCompras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Registro.png"))); // NOI18N
        Btn_MostrarCompras.setText("Mostrar Compras");
        Btn_MostrarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_MostrarComprasActionPerformed(evt);
            }
        });

        Txt_NombreProveedor.setEditable(false);
        Txt_NombreProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NombreProveedorKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Proveedor");
        jLabel7.setPreferredSize(new java.awt.Dimension(80, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(Btn_MostrarCompras)
                .addGap(52, 52, 52)
                .addComponent(Btn_GenerarCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Txt_NombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Txt_TotalPago, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_MostrarCompras)
                    .addComponent(Btn_GenerarCompra)
                    .addComponent(Btn_Cancelar)
                    .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_TotalPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_NombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Txt_DocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Txt_DocumentoFocusLost

    }//GEN-LAST:event_Txt_DocumentoFocusLost

    private void Txt_DocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_DocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_DocumentoActionPerformed

    private void Txt_NombreProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NombreProveedorKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_NombreProveedor.getText();

        if((evt.getKeyChar() == 22)){

            Txt_NombreProveedor.setText(Texto.substring(0, 20));

        }

        if (Txt_NombreProveedor.getText().length() >= 20){

            evt.consume();

        }

        if (Txt_NombreProveedor.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_NombreProveedor.setText(Texto);

        }
    }//GEN-LAST:event_Txt_NombreProveedorKeyTyped

    private void Txt_IdArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_IdArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_IdArticuloActionPerformed

    private void Txt_IdArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_IdArticuloKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_IdArticulo.getText();
        
        if(c < '0' || c > '9') {
        
            evt.consume();
                    
        }

        if((evt.getKeyChar() == 22)){

            Txt_IdArticulo.setText(Texto.substring(0, 8));

        }

        if (Txt_IdArticulo.getText().length() >= 8){

            evt.consume();

        }


    }//GEN-LAST:event_Txt_IdArticuloKeyTyped

    private void Txt_TotalPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_TotalPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_TotalPagoActionPerformed

    private void Btn_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarActionPerformed
         
        FmrMenú M = new FmrMenú();
        M.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarActionPerformed

    private void Btn_MostrarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_MostrarComprasActionPerformed
        
        FmrRegistroCompra c = new FmrRegistroCompra();
        c.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_MostrarComprasActionPerformed

    private void Btn_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarActionPerformed

        try{
     
         Txt_NombreProveedor.setText(GetNombreProveedor(Txt_Documento.getText()));
     
     }catch(Exception e){
         
         JOptionPane.showMessageDialog(this, "El proveedor que usted busca no existe","Alerta",JOptionPane.ERROR_MESSAGE);
         Txt_NombreProveedor.setText("");
     
     }
    
        
    }//GEN-LAST:event_Btn_BuscarActionPerformed

    private void Tbl_ArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_ArticulosMouseClicked
       
        int fila =  Tbl_Articulos.getSelectedRow();
        
        if(ValidarGenerarCompra(N.id) == true){
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else{
        
        Btn_Agregar.setEnabled(true);
        String Id = Tbl_Articulos.getValueAt(fila, 0).toString();
        String Nombre = Tbl_Articulos.getValueAt(fila, 1).toString();
               
        
        Txt_IdArticulo.setText(Id);
        Txt_NombreArticulo.setText(Nombre);
          
        }
        }  
        
        
    }//GEN-LAST:event_Tbl_ArticulosMouseClicked

    private void Txt_IdArticuloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Txt_IdArticuloFocusLost
         Articulo art = new Articulo();
           
        try{   
        art = daoArticulo.findArticulo(Integer.parseInt(Txt_IdArticulo.getText()));
     
        if (art == null){
                
            Txt_NombreArticulo.setText("");
          
        }else{
                      
            Txt_IdArticulo.setText(String.valueOf(art.getIdArticulo()));
            Txt_NombreArticulo.setText(art.getNombreArticulo());
            
            
        }}catch(Exception e){
        
            Txt_NombreArticulo.setText("");
                    
        
        }
    }//GEN-LAST:event_Txt_IdArticuloFocusLost

    private void Btn_BuscarIdProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarIdProductoActionPerformed
      
        try{
            
        ActualizarArticulo2(buscarIdArticulo(Txt_IdArticulo.getText()));
        
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al buscar: " + ex);
          
        }
        
        
    }//GEN-LAST:event_Btn_BuscarIdProductoActionPerformed

    private void Btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EliminarActionPerformed
        
        int fila =  Tbl_compra.getSelectedRow();
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else{
        
        try{
        t = (DefaultTableModel) Tbl_compra.getModel();
        t.removeRow(fila);
        Btn_Eliminar.setEnabled(false);
        Calculos();
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al eliminar: " + ex);
          
        }
        } 
    }//GEN-LAST:event_Btn_EliminarActionPerformed

    private void Btn_AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AgregarActionPerformed
       
        if(Txt_Cantidad.getText().length() < 1 ){
        
            JOptionPane.showMessageDialog(this, "La cantidad no puede estar vacia","Error",JOptionPane.ERROR_MESSAGE);
        
        }else if(Integer.parseInt(Txt_Cantidad.getText()) == 0){
        
            JOptionPane.showMessageDialog(this, "La cantidad no puede ser cero","Error",JOptionPane.ERROR_MESSAGE);
        
        }else if(ValidacionDecimales(Txt_PrecioCompra.getText())== false){
        
            JOptionPane.showMessageDialog(this, "El rango del precio está entre 10.00 - 99999.99","Error",JOptionPane.ERROR_MESSAGE);
        
        }else{
            
            LLenarTablaVenta();
            Txt_IdArticulo.setText("");
            Txt_NombreArticulo.setText("");
            Txt_Cantidad.setText("");
            Txt_PrecioCompra.setText("");
            Btn_Agregar.setEnabled(false);
            Calculos();
            
        }
        
    }//GEN-LAST:event_Btn_AgregarActionPerformed

    private void Btn_BuscarNombreArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarNombreArticuloActionPerformed
         
        try{
            
        ActualizarArticulo2(buscarArticulo(Txt_NombreArticulo.getText()));
        
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al buscar: " + ex);
          
        }
    }//GEN-LAST:event_Btn_BuscarNombreArticuloActionPerformed

    private void Tbl_compraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_compraMouseClicked
        
        int fila =  Tbl_compra.getSelectedRow();
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else{
        
        Btn_Eliminar.setEnabled(true);
        
        } 
        
    }//GEN-LAST:event_Tbl_compraMouseClicked

    private void Btn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CancelarActionPerformed

       try{        
        Cancelar();
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al Cancelar: " + ex);
          
        }   
        
    }//GEN-LAST:event_Btn_CancelarActionPerformed

    private void Txt_DocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_DocumentoKeyTyped
     
        char c = evt.getKeyChar();
        String Texto = Txt_Documento.getText();
        
         if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z')&&(c < '0' || c > '9')){
        
            evt.consume();
        
        }
        
          if (Txt_Documento.getText().length() >= 20){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Documento.setText(Texto.substring(0, 20));
                    
        }
         
    }//GEN-LAST:event_Txt_DocumentoKeyTyped

    private void Txt_PrecioCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_PrecioCompraKeyTyped
       
         char c = evt.getKeyChar();
        String Texto = Txt_PrecioCompra.getText();
        
        if(c < '0' || c > '9') {

            if(c == 46){
            }
            else{
            evt.consume();
            }
             
        }
        
         if (Txt_PrecioCompra.getText().length() >= 8){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_PrecioCompra.setText(Texto.substring(0, 8));
                    
        }
        
    }//GEN-LAST:event_Txt_PrecioCompraKeyTyped

    private void Txt_CantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_CantidadKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_Cantidad.getText();
       
        if(c < '0' || c > '9') {
        
            evt.consume();
                    
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Cantidad.setText(Texto.substring(0, 5));
                    
        }
        
        if (Txt_Cantidad.getText().length() >= 5){
        
        evt.consume();
        
        }
        
    }//GEN-LAST:event_Txt_CantidadKeyTyped

    private void Txt_FechaPedidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_FechaPedidoKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_FechaPedido.getText();
        
        if(c < '0' || c > '9') {

            if(c == 47){
            }
            else{
            evt.consume();
            }
             
        }
        
        if (Txt_FechaPedido.getText().length() >= 10){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
        Txt_FechaPedido.setText(Texto.substring(0, 10));
                    
        } 
    }//GEN-LAST:event_Txt_FechaPedidoKeyTyped

    private void Txt_FechaRecibidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_FechaRecibidoKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_FechaRecibido.getText();
        
        if(c < '0' || c > '9') {

            if(c == 47){
            }
            else{
            evt.consume();
            }
             
        }
        
        if (Txt_FechaRecibido.getText().length() >= 10){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
        Txt_FechaRecibido.setText(Texto.substring(0, 10));
                    
        } 
        
    }//GEN-LAST:event_Txt_FechaRecibidoKeyTyped

    private void Txt_NombreArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NombreArticuloKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_NombreArticulo.getText();

        if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z')){

            if(c == 'á' || c == 'é' || c == 'í' || c == 'ó' || c == 'ú' || c == 47 || c == 32 || c == 45){
            }
            else{
             evt.consume();
            }

        }
      
        if (Txt_NombreArticulo.getText().length() >= 50){
        
        evt.consume();
        
        }
        
        
         if((evt.getKeyChar() == 22)){
        
            Txt_NombreArticulo.setText(Texto.substring(0, 50));
                    
        }
        
        if (Txt_NombreArticulo.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_NombreArticulo.setText(Texto);

        }
        
    }//GEN-LAST:event_Txt_NombreArticuloKeyTyped

    private void Btn_GenerarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_GenerarCompraActionPerformed
        
        if(Txt_NombreProveedor.getText().length() < 3){
        
            JOptionPane.showMessageDialog(this, "Debe de buscar un proveedor","Error",JOptionPane.ERROR_MESSAGE);
        
        }else if(Tbl_compra.getRowCount() == 0){
        
            JOptionPane.showMessageDialog(this, "Debe de agregar por lo menos un artículo","Error",JOptionPane.ERROR_MESSAGE);
        
        }else if(ValidacionFecha(Txt_FechaPedido.getText())== false || Txt_FechaPedido.getText().length() < 10){
        
            JOptionPane.showMessageDialog(this, "Formato de Fecha Pedido inválido, el formato es: DD/MM/YYYY","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(Fechavalida(Txt_FechaPedido.getText()) == false){
        
            JOptionPane.showMessageDialog(this, "sssFormato de Fecha Pedido inválido, el formato es: DD/MM/YYYY","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(ValidacionFecha(Txt_FechaRecibido.getText())== false || Txt_FechaRecibido.getText().length() < 10){
        
            JOptionPane.showMessageDialog(this, "Formato de Fecha Recibido inválido, el formato es: DD/MM/YYYY","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(Fechavalida(Txt_FechaRecibido.getText()) == false){
        
            JOptionPane.showMessageDialog(this, "dddFormato de Fecha Recibido inválido, el formato es: DD/MM/YYYY","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(Comparacionfecha(Txt_FechaPedido.getText(), Txt_FechaRecibido.getText()) == false){
        
            JOptionPane.showMessageDialog(this, "La Fecha Pedido no puede ser mayor a la Fecha Recibido","Error",JOptionPane.ERROR_MESSAGE);
        
       }else{
        
        
        try{
            
            LlenarCompra();
            LlenarDetalleCompra();
            Cancelar();
            JOptionPane.showMessageDialog(this, "Compra realizada con éxito");
            
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al registrar compra: " + ex);
          
        }
        
    }
    }//GEN-LAST:event_Btn_GenerarCompraActionPerformed

    private void Txt_BuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_BuscarProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_BuscarProveedorActionPerformed

    private void Btn_BuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarProveedorActionPerformed
        
         try{
     
         Txt_NombreProveedor.setText(GetNombreProveedor2(Txt_BuscarProveedor.getText()));
     
     }catch(Exception e){
         JOptionPane.showMessageDialog(this, "El proveedor que usted busca no existe","Alerta",JOptionPane.ERROR_MESSAGE);
         Txt_NombreProveedor.setText("");
     
     }
        
    }//GEN-LAST:event_Btn_BuscarProveedorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FmrCompras().setVisible(true);
        });
    }

    
      private void ActualizarArticulo(){
       
            DefaultTableModel t = new DefaultTableModel();
          
            t = (DefaultTableModel) Tbl_Articulos.getModel();
          
        
            List<Articulo> articulo = this.daoArticulo.findArticuloEntities();
        
          
            for(Articulo Articulo : articulo){
               
                 if(Articulo.isActivoArticulo() == true){
                 
                    t.addRow(
                    new Object[]{
                        
                        
                        Articulo.getIdArticulo(),
                        Articulo.getNombreArticulo(),
                        Articulo.getPrecioArticulo(),
                        Articulo.getStock(),
                        GetNombreTalla(Articulo.getIdTalla()),
                                          
                    });
                                 
                 }
                

            }
       
       
       }
    
      
//       private void ActualizarProveedor2(List<Proveedores> buscarProveedor ){
//       
//            DefaultTableModel t = new DefaultTableModel();
//            Tbl_Proveedores.setModel(t);
//            t.addColumn("Documento");
//            t.addColumn("Proveedor");
//            t.addColumn("Teléfono");
//            t.addColumn("Correo");
//            t.addColumn("Dirección");
//            
//            
//             List<Proveedores> proveedores =  buscarProveedor;
//        
//            String s;
//            for(Proveedores Proveedores : proveedores){
//                
//                if(Proveedores.isActivoProveedor() == true){
//
//                t.addRow(
//                    new Object[]{
//                        Proveedores.getDocumento(),
//                        Proveedores.getNombreProveedor(),
//                        Proveedores.getTelefonoProveedor(),
//                        Proveedores.getCorreoProveedor(),
//                        Proveedores.getUbicacionProveedor()
//                        
//                        
//                    });
//                }   }   
//            
//             
//       }
       
       public List<Proveedores> buscarProveedor(String Nombres){
       
           Proveedores p;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "SELECT p From Proveedores p WHERE p.nombreProveedor LIKE'"+ Nombres + "%'";
           Query query = em.createQuery(select);
           List<Proveedores> lista = query.getResultList();
           return lista;
           
       }
      
       public List<Proveedores> buscarDocumento(String Nombres){
       
           Proveedores p;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "SELECT p From Proveedores p WHERE p.documento LIKE'"+ Nombres + "%'";
           Query query = em.createQuery(select);
           List<Proveedores> lista = query.getResultList();
           return lista;
           
       }
      
     private static String GetNombreTalla(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreTalla FROM Talla WHERE idTalla = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          }         
   
          private static int GetIdTalla(String Nombre){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idTalla FROM Talla WHERE nombreTalla = '"+ Nombre+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }  
          
          
          private static String GetNombreProveedor(String RTN){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreProveedor FROM Proveedores WHERE documento = '"+ RTN+ "' AND activoProveedor = true";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
          
          private static String GetNombreProveedor2(String nombre){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreProveedor FROM Proveedores WHERE nombreProveedor = '"+ nombre+ "' AND activoProveedor = true";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
    
          
       private void Cancelar(){
          
        int fila = Tbl_compra.getRowCount();
        t = (DefaultTableModel) Tbl_compra.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        t.removeRow(i);
                   
        }
        
        
        try{
        
        LimpiarCompra();
        ActualizarArticulo2(buscarArticulo(""));
        Txt_TotalPago.setText("0.0");
        
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al Cancelar: " + ex);
          
        }        
        }
          
          
        private void LLenarTablaVenta(){
       
                                  
        int fila =  Tbl_Articulos.getSelectedRow();
        if(fila == -1){
        
        JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else if(GetStockMax(Tbl_Articulos.getValueAt(fila, 0).toString()) < (Integer.parseInt(Txt_Cantidad.getText()) + Integer.parseInt(Tbl_Articulos.getValueAt(fila, 3).toString()))){
        
        JOptionPane.showMessageDialog(this, "El Stock de este Artículo no puede superar la cantidad máxima de: "+GetStockMax(Tbl_Articulos.getValueAt(fila, 0).toString()),"Error",JOptionPane.ERROR_MESSAGE);
        
        }else{
           
         t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        String Id = Tbl_Articulos.getValueAt(fila, 0).toString();
        String Nombre = Tbl_Articulos.getValueAt(fila, 1).toString();
        String Precio = Txt_PrecioCompra.getText().toString();
        String Cantidad= Txt_Cantidad.getText().toString();
        String Talla = Tbl_Articulos.getValueAt(fila, 4).toString();
        double X= (Integer.parseInt(Cantidad) * Double.parseDouble(Precio));
        String Total = String.valueOf(X);
        
        try{
        t = (DefaultTableModel) Tbl_compra.getModel();
        String Articulos[] ={Id,Nombre,Talla,Precio,Cantidad,Total};
        t.addRow(Articulos);
        }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al llenar tabla compra: " + ex);
          
        }
        }   
                
          }
          
    private void Calculos(){
       
        double Subtotal = 0;
   
        int fila = Tbl_compra.getRowCount();
        t = (DefaultTableModel) Tbl_compra.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        Subtotal = Subtotal + Double.parseDouble(t.getValueAt(i, 5).toString());
                   
        }
        
        
        
        DecimalFormat df = new DecimalFormat("#.00");
        
        Txt_TotalPago.setText(String.valueOf(df.format(Subtotal)));
                
          }
    
    private void ActualizarArticulo2(List<Articulo> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Articulos.setModel(t);
            t.addColumn("Id");
            t.addColumn("Artículo");
            t.addColumn("Precio");
            t.addColumn("Stock Actual");
            t.addColumn("Talla");
                      
        
            List<Articulo> articulo = lista;
        
          
            for(Articulo Articulo : articulo){
               
                 if(Articulo.isActivoArticulo() == true ){
                 
                    t.addRow(
                    new Object[]{
                        
                        
                        Articulo.getIdArticulo(),
                        Articulo.getNombreArticulo(),
                        Articulo.getPrecioArticulo(),
                        Articulo.getStock(),
                        GetNombreTalla(Articulo.getIdTalla()),
                                          
                    });
                                 
                 }
                
            }     
       
       }
    
    
    public List<Articulo> buscarArticulo(String Nombres){
       
           Articulo a;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "SELECT a From Articulo a WHERE a.nombreArticulo LIKE'"+ Nombres + "%'";
           Query query = em.createQuery(select);
           List<Articulo> lista = query.getResultList();
           return lista;
           
       }
    
    public List<Articulo> buscarIdArticulo(String ID){
       
           Articulo a;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select a From Articulo a WHERE idArticulo LIKE '"+ ID +"%'";
           Query query = em.createQuery(select);
           List<Articulo> lista = query.getResultList();
           return lista;
           
       }
    
      private void LimpiarCompra(){
     
          try{
              
          Txt_Documento.setText("");
          Txt_NombreProveedor.setText("");
          Txt_FechaPedido.setText("");
          Txt_FechaRecibido.setText("");
          Txt_Cantidad.setText("");
          Txt_PrecioCompra.setText("");
          Txt_IdArticulo.setText("");
          Txt_NombreArticulo.setText("");
          Btn_Agregar.setEnabled(false);
          Btn_Eliminar.setEnabled(false); 
          
          }catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al limpiar: " + ex);
          
        }

     }
      
      
      public static boolean ValidacionDecimales(String Decimal){
        
        return Decimal.matches("^[1-9]{1}[0-9]{1,4}+\\.[0-9]{2}$");
                
        }
    
      
      private void LlenarCompra(){
        
            objCompra.setIdCompra(IdCompra());
            objCompra.setTotalCompra(Double.parseDouble(Txt_TotalPago.getText()));
            objCompra.setFechaPedido(Timestamp.valueOf(GuardarFecha(Txt_FechaPedido.getText())+ " 00:00:00"));
            objCompra.setFechaRecibido(Timestamp.valueOf(GuardarFecha(Txt_FechaRecibido.getText())+ " 00:00:00"));
            objCompra.setIdProveedor(GetIdProveedor(Txt_NombreProveedor.getText()));
            objCompra.setIdEmpleados(N.getId());
            objCompra.setIdEstado(2);
            
            
        try {
            daoCompra.create(objCompra);
                        
        } catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al llenar comprar: " + ex);
          
        }   
       } 
      
      
      private void LlenarDetalleCompra(){
        
        int fila = Tbl_compra.getRowCount();
        t = (DefaultTableModel) Tbl_compra.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
            
            objDetalleCompra.setIdDetalleCompra(IdDetalleCompra());
            objDetalleCompra.setCantidad(Integer.parseInt(t.getValueAt(i, 4).toString()));
            objDetalleCompra.setIdCompra((IdCompra()-1));
            objDetalleCompra.setIdArticulo(Integer.parseInt(t.getValueAt(i, 0).toString()));
            objDetalleCompra.setPrecioCompra(Double.parseDouble(t.getValueAt(i, 3).toString()));           
            
        try {
            daoDetalleCompra.create(objDetalleCompra);
           
        } catch(Exception ex){
        
        log.Logs("PantallaCompra", "Error al llenar detalle compra: " + ex);
          
        }  
          }
        
        
       } 
      
      public static int IdCompra(){
        
             EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
             EntityManager em = emf.createEntityManager();
      
             String select = "SELECT Max(idCompra)+1 FROM Compra";
   
             Query query = em.createQuery(select);
        
              if(query.getSingleResult() == null){
             
             return 1;
             
             }else{
                 
             return Integer.parseInt(query.getSingleResult().toString());
             
             }
        
        }
      
      public static int IdDetalleCompra(){
        
             EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
             EntityManager em = emf.createEntityManager();
      
             String select = "SELECT Max(idDetalleCompra)+1 FROM DetalleCompra";
   
             Query query = em.createQuery(select);
        
              if(query.getSingleResult() == null){
             
             return 1;
             
             }else{
                 
             return Integer.parseInt(query.getSingleResult().toString());
             
             }
        
        }
      
      public static String GuardarFecha(String f){
        
        
        //  21/03/1999
         
        String dia = f.substring(0, 2);
        String mes = f.substring(3, 5);
        String año = f.substring(6, 10);
        
        return año+"-"+mes+"-"+dia;
        
    
    }
    
      private static int GetIdProveedor(String Nombre){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idProveedor FROM Proveedores WHERE nombreProveedor = '"+ Nombre+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }
      
      private static boolean Comparacionfecha(String FechaInicio, String FechaFinal){
    
        int dia = Integer.parseInt(FechaInicio.substring(0, 2));
        int mes = Integer.parseInt(FechaInicio.substring(3, 5));
        int año = Integer.parseInt(FechaInicio.substring(6, 10));
    
        int dia2 = Integer.parseInt(FechaFinal.substring(0, 2));
        int mes2 = Integer.parseInt(FechaFinal.substring(3, 5));
        int año2 = Integer.parseInt(FechaFinal.substring(6, 10));
    
        if(año < año2){
        
        return true;
        
        }else if(año == año2 && mes < mes2){
        
        return true;
        
        }else if(año == año2 && mes == mes2 && dia <= dia2){
        
        return true;
        
        }else{
            
        return false;
        
        }
           
    }
      
       public static boolean ValidacionFecha(String Nombre){
        
        return Nombre.matches("^(?:3[01]|[12][0-9]|0?[1-9])([\\/])(0?[0-9]|1[0-2])\\1\\d{4}$");
        
        }
      
      public static boolean ValidacionDias(String Fecha){
        
        //  21/03/1999
        int Año = Integer.parseInt(Fecha.substring(6, 10));
        Fecha = Fecha.substring(0, 5);
         
        System.out.println(Año);
        
        if ((Año % 4 == 0) && ((Año % 100 != 0) || (Año % 400 == 0))){
            
	if(Fecha.equals("30/02") || Fecha.equals("31/02") || Fecha.equals("31/04") || Fecha.equals("31/06") || Fecha.equals("31/09") ||
           Fecha.equals("31/11")|| Fecha.equals("29/02")){
      
            return true;
        
        }else{
        
            return false;
           
        }
       
        }else{
	
           if(Fecha.equals("30/02") || Fecha.equals("31/02") || Fecha.equals("31/04") || Fecha.equals("31/06") || Fecha.equals("31/09") ||
           Fecha.equals("31/11")){
      
            return true;
        
        }else{
        
            return false;
           
        }   }   }
      
      
         private static int GetStockMax(String ID){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT stockMaximo FROM Articulo WHERE idArticulo = '"+ ID+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }
      
        public static boolean Fechavalida(String date){
        try {
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            df.setLenient(false);
            df.parse(date);
            return true;
        } catch (ParseException e) {
            return false;
        }}
        
        
        public void RestringirPermisos(boolean GenerarCompra,boolean MostrarCompras,boolean Buscar){
        
      
      if(GenerarCompra == false){
       
         Btn_GenerarCompra.setEnabled(false);
          
      }
      if(MostrarCompras == false){
       
         Btn_MostrarCompras.setEnabled(false);
          
      }
      if(Buscar == false){
       
        Btn_BuscarIdProducto.setEnabled(false);
        Btn_BuscarNombreArticulo.setEnabled(false);
        Btn_Buscar.setEnabled(false);
        Btn_BuscarProveedor.setEnabled(false);
          
      }
      
    }
          
          
    public boolean ValidarGenerarCompra(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where registrarCompras = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
    
    public boolean ValidarMostrarCompras(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where mostrarCompras = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
    
    public boolean ValidarBuscar(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where buscarCompras = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
         
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Agregar;
    private javax.swing.JButton Btn_Buscar;
    private javax.swing.JButton Btn_BuscarIdProducto;
    private javax.swing.JButton Btn_BuscarNombreArticulo;
    private javax.swing.JButton Btn_BuscarProveedor;
    private javax.swing.JButton Btn_Cancelar;
    private javax.swing.JButton Btn_Eliminar;
    private javax.swing.JButton Btn_GenerarCompra;
    private javax.swing.JButton Btn_MostrarCompras;
    private javax.swing.JButton Btn_Regresar;
    private javax.swing.JTable Tbl_Articulos;
    private javax.swing.JTable Tbl_compra;
    private javax.swing.JTextField Txt_BuscarProveedor;
    private javax.swing.JTextField Txt_Cantidad;
    private javax.swing.JTextField Txt_Documento;
    private javax.swing.JTextField Txt_FechaPedido;
    private javax.swing.JTextField Txt_FechaRecibido;
    private javax.swing.JTextField Txt_IdArticulo;
    private javax.swing.JTextField Txt_NombreArticulo;
    private javax.swing.JTextField Txt_NombreProveedor;
    private javax.swing.JTextField Txt_PrecioCompra;
    private javax.swing.JTextField Txt_TotalPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
