/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.PrecioHistorico;
import com.dao.PrecioHistoricoJpaController;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import static java.util.Collections.list;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRSaveContributor;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author david
 */
public class FmrPrecioHistórico extends javax.swing.JFrame {

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    NombreEmpleado N = new NombreEmpleado();
    PrecioHistoricoJpaController daoPrecioHistorico = new PrecioHistoricoJpaController();
    static Logs log = new Logs();
    PrecioHistorico objPrecioHistorico = new PrecioHistorico();
    
    // Select p From PrecioHistorico p WHERE idArticulo = 14 AND fechaFinal = null
    
    public FmrPrecioHistórico() {
        initComponents();
        this.setLocationRelativeTo(null);
        //Icono
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        ActualizarPrecioHistorico();
        RestringirPermisos(ValidarBuscar(N.id),ValidarImprimir(N.id));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_PrecioHistorico = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Btn_Regresar = new javax.swing.JButton();
        Btn_BuscarIdArticulo = new javax.swing.JButton();
        Btn_BuscarPrecio = new javax.swing.JButton();
        Txt_IdArticulo = new javax.swing.JTextField();
        Txt_Precio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Txt_NombreArticulo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Btn_BuscarArticulo = new javax.swing.JButton();
        Btn_BuscarFechaInicio = new javax.swing.JButton();
        Txt_Fecha = new javax.swing.JTextField();
        Btn_Limpiar = new javax.swing.JButton();
        Btn_Imprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Historial de Precios - Microcosmos");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 100));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LogoMicrocosmos.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanel2.setBackground(new java.awt.Color(60, 63, 65));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(800, 230));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 230));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 230));

        Tbl_PrecioHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tbl_PrecioHistorico);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBackground(new java.awt.Color(60, 63, 65));
        jPanel3.setMaximumSize(new java.awt.Dimension(800, 130));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 130));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 130));

        Btn_Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/return.png"))); // NOI18N
        Btn_Regresar.setText("Regresar");
        Btn_Regresar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Regresar.setFocusPainted(false);
        Btn_Regresar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarActionPerformed(evt);
            }
        });

        Btn_BuscarIdArticulo.setText("Buscar");
        Btn_BuscarIdArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarIdArticuloActionPerformed(evt);
            }
        });

        Btn_BuscarPrecio.setText("Buscar");
        Btn_BuscarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarPrecioActionPerformed(evt);
            }
        });

        Txt_IdArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_IdArticuloKeyTyped(evt);
            }
        });

        Txt_Precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_PrecioKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("ID artículo");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Nombre artículo");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Precio");

        Txt_NombreArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NombreArticuloKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Fecha inicial");

        Btn_BuscarArticulo.setText("Buscar");
        Btn_BuscarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarArticuloActionPerformed(evt);
            }
        });

        Btn_BuscarFechaInicio.setText("Buscar");
        Btn_BuscarFechaInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarFechaInicioActionPerformed(evt);
            }
        });

        Txt_Fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_FechaKeyTyped(evt);
            }
        });

        Btn_Limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        Btn_Limpiar.setText("Limpiar");
        Btn_Limpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Limpiar.setFocusPainted(false);
        Btn_Limpiar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Limpiar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Limpiar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LimpiarActionPerformed(evt);
            }
        });

        Btn_Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir.png"))); // NOI18N
        Btn_Imprimir.setText("Reporte");
        Btn_Imprimir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Txt_Precio, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(Btn_BuscarPrecio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Txt_IdArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Btn_BuscarIdArticulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Txt_NombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Btn_BuscarArticulo)
                            .addComponent(Btn_BuscarFechaInicio))
                        .addContainerGap(114, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(Btn_Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(Btn_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_BuscarIdArticulo)
                    .addComponent(Txt_IdArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(Txt_NombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_BuscarArticulo)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_BuscarPrecio)
                    .addComponent(Txt_Precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Btn_BuscarFechaInicio)
                    .addComponent(Txt_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Regresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarActionPerformed
        
        FmrConfiguraciones conf = new FmrConfiguraciones();
        conf.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarActionPerformed

    private void Btn_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LimpiarActionPerformed

        try{
        LimpiarPrecioHistorico();
        ActualizarPrecioHistorico();
        }catch(Exception ex){
        
        log.Logs("PantallaPrecioHistorica", "Error al limpiar: " + ex);
          
        }
        
    }//GEN-LAST:event_Btn_LimpiarActionPerformed

    private void Btn_BuscarIdArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarIdArticuloActionPerformed
        
        if(Txt_IdArticulo.getText().equals("")){
            
            JOptionPane.showMessageDialog(this, "El campo ID está vacío","Error",JOptionPane.ERROR_MESSAGE);
            
        }else{
            
        ActualizarPrecioHistorico2(buscarIdArticulo(Txt_IdArticulo.getText()));
        LimpiarPrecioHistorico();
                
        }
    }//GEN-LAST:event_Btn_BuscarIdArticuloActionPerformed

    private void Btn_BuscarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarArticuloActionPerformed
        
        ActualizarPrecioHistorico2(buscarArticulo(Txt_NombreArticulo.getText()));
        LimpiarPrecioHistorico();
        
    }//GEN-LAST:event_Btn_BuscarArticuloActionPerformed

    private void Btn_BuscarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarPrecioActionPerformed
        
        if(ValidacionDecimales(Txt_Precio.getText())== false){
        
        JOptionPane.showMessageDialog(this, "El rango del precio está entre 10.00 - 99999.99","Error",JOptionPane.ERROR_MESSAGE);
        
        }else{
        ActualizarPrecioHistorico2(buscarPrecio(Txt_Precio.getText()));
        LimpiarPrecioHistorico();
        }
    }//GEN-LAST:event_Btn_BuscarPrecioActionPerformed

    private void Btn_BuscarFechaInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarFechaInicioActionPerformed
        
        if(ValidacionFecha(Txt_Fecha.getText())== false || Txt_Fecha.getText().length() < 10 || ValidacionDias(Txt_Fecha.getText()) == true){
        
        JOptionPane.showMessageDialog(this, "Formato de la fecha inválido, el formato es: DD/MM/YYYY","Error",JOptionPane.ERROR_MESSAGE);
        
        }else {
       
       ActualizarPrecioHistorico2(buscarFecha(MirarFecha(Txt_Fecha.getText())));
       LimpiarPrecioHistorico(); 
       
        }
    }//GEN-LAST:event_Btn_BuscarFechaInicioActionPerformed

    private void Txt_IdArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_IdArticuloKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_IdArticulo.getText();
       
        if(c < '0' || c > '9') {
        
            //consume no valida los datos
            evt.consume();
                     
        }
        
        if (Txt_IdArticulo.getText().length() >= 10){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
        Txt_IdArticulo.setText(Texto.substring(0, 10));
                    
        }        
        
        
    }//GEN-LAST:event_Txt_IdArticuloKeyTyped

    private void Txt_PrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_PrecioKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_Precio.getText();
        
        if(c < '0' || c > '9') {

            if(c == 46){
            }
            else{
            evt.consume();
            }
             
        }
        
        if (Txt_Precio.getText().length() >= 8){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
        Txt_Precio.setText(Texto.substring(0, 8));
                    
        } 
        
    }//GEN-LAST:event_Txt_PrecioKeyTyped

    private void Txt_NombreArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NombreArticuloKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_NombreArticulo.getText();

        if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z')){

            if(c == 'á' || c == 'é' || c == 'í' || c == 'ó' || c == 'ú' || c == 47 || c == 32 || c == 45){
            }
            else{
             evt.consume();
            }

        }
      
        if (Txt_NombreArticulo.getText().length() >= 50){
        
        evt.consume();
        
        }
        
        
         if((evt.getKeyChar() == 22)){
        
            Txt_NombreArticulo.setText(Texto.substring(0, 50));
                    
        }
        
        if (Txt_NombreArticulo.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_NombreArticulo.setText(Texto);

        }
        
    }//GEN-LAST:event_Txt_NombreArticuloKeyTyped

    private void Txt_FechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_FechaKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_Fecha.getText();
        
        if(c < '0' || c > '9') {

            if(c == 47){
            }
            else{
            evt.consume();
            }
             
        }
        
        if (Txt_Fecha.getText().length() >= 10){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
        Txt_Fecha.setText(Texto.substring(0, 10));
                    
        } 
                
    }//GEN-LAST:event_Txt_FechaKeyTyped

    private void Btn_ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ImprimirActionPerformed

       try{
        GenerarReporte();
        }catch(Exception ex){
        
        log.Logs("PantallaPrecioHistorica", "Error al generar reporte: " + ex);
          
        }
    }//GEN-LAST:event_Btn_ImprimirActionPerformed

     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrPrecioHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrPrecioHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrPrecioHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrPrecioHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmrPrecioHistórico().setVisible(true);
            }
        });
    }
    
    private void LimpiarPrecioHistorico(){
     
        try{
        Txt_IdArticulo.setText("");
        Txt_NombreArticulo.setText("");
        Txt_Precio.setText("");
        Txt_Fecha.setText("");
        
        }catch(Exception ex){
        
        log.Logs("PantallaPrecioHistorica", "Error al limpiar: " + ex);
          
        }
            
     }
    
    private void ActualizarPrecioHistorico(){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_PrecioHistorico.setModel(t);
            t.addColumn("Id");
            t.addColumn("Artículo");
            t.addColumn("Precio");
            t.addColumn("Fecha Inicial");
            t.addColumn("Fecha Final");
            
        
            List<PrecioHistorico> precioHistorico = this.daoPrecioHistorico.findPrecioHistoricoEntities();
        
            String s;
            for(PrecioHistorico PrecioHistorico : precioHistorico){
                
               
                t.addRow(
                    new Object[]{
                        PrecioHistorico.getIdPrecioHistorico(),
                        GetNombreArticulo(PrecioHistorico.getIdArticulo()),
                        PrecioHistorico.getPrecio(),
                        MostrarFecha(PrecioHistorico.getFechaInicial().toString()),
                        MostrarFecha(GetFecha(PrecioHistorico.getIdPrecioHistorico()))
                        
                        
                    });
            }
       
       
       }
    
    
     public static String MostrarFecha(String f){
        
         if(f.equals("")){
         
         return "";
         }else{
  
        String dia = f.substring(0, 4);
        String mes = f.substring(5, 7);
        String año = f.substring(8, 10);
        String hora = f.substring(11, 19);
        
        return año+"/"+mes+"/"+dia +" "+hora;
         
         }

    }
    
    private static String GetNombreArticulo(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreArticulo FROM Articulo WHERE idArticulo = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          }   
    
    
        private static String GetFecha(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT fechaFinal FROM PrecioHistorico WHERE idPrecioHistorico = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              try{
              return query.getSingleResult().toString();
              }
              catch(Exception e){
              
              return "";
              }
          }
    
    
        
         private void ActualizarPrecioHistorico2(List<PrecioHistorico> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_PrecioHistorico.setModel(t);
            t.addColumn("Id");
            t.addColumn("Artículo");
            t.addColumn("Precio");
            t.addColumn("Fecha Inicial");
            t.addColumn("Fecha Final");
            
            
            List<PrecioHistorico> precioHistorico = lista;
        
            String s;
            for(PrecioHistorico PrecioHistorico : precioHistorico){
                
               
                t.addRow(
                    new Object[]{
                        PrecioHistorico.getIdPrecioHistorico(),
                        GetNombreArticulo(PrecioHistorico.getIdArticulo()),
                        PrecioHistorico.getPrecio(),
                        MostrarFecha(PrecioHistorico.getFechaInicial().toString()),
                        MostrarFecha(GetFecha(PrecioHistorico.getIdPrecioHistorico()))
                        
                        
                    });
            }
       
       
       }
        
        public List<PrecioHistorico> buscarIdArticulo(String ID){
       
           PrecioHistorico P;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select p From PrecioHistorico p WHERE idArticulo = '"+ ID + "' AND fechaFinal = null";
           Query query = em.createQuery(select);
           List<PrecioHistorico> lista = query.getResultList();
           return lista;
           
       }
        
        
        public List<PrecioHistorico> buscarArticulo(String Nombre){
       
           PrecioHistorico P;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "SELECT p FROM PrecioHistorico  as p\n" +
           "WHERE p.idArticulo IN (SELECT idArticulo FROM Articulo WHERE nombreArticulo LIKE '"
           + Nombre + "%') AND fechaFinal = null";
           Query query = em.createQuery(select);
           List<PrecioHistorico> lista = query.getResultList();
           return lista;
           
         
       }
        
        
        public List<PrecioHistorico> buscarPrecio(String Precio){
       
           PrecioHistorico P;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select p From PrecioHistorico p WHERE precio = '"+ Precio + "' AND fechaFinal = null";
           Query query = em.createQuery(select);
           List<PrecioHistorico> lista = query.getResultList();
           return lista;
           
       }
        
        public List<PrecioHistorico> buscarFecha(String FechaInicial){
       
           PrecioHistorico P;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select p From PrecioHistorico p WHERE fechaInicial LIKE '"+ FechaInicial + "%' AND fechaFinal = null";
           Query query = em.createQuery(select);
           List<PrecioHistorico> lista = query.getResultList();
           return lista;
           
       }
        
        public static String MirarFecha(String f){
        
        //  21/03/1999
         
        String dia = f.substring(0, 2);
        String mes = f.substring(3, 5);
        String año = f.substring(6, 10);
        
        return año+"-"+mes+"-"+dia;
        
    
    }
        
        
    public static boolean ValidacionFecha(String Nombre){
        
    return Nombre.matches("^(?:3[01]|[12][0-9]|0?[1-9])([\\/])(0?[0-9]|1[0-2])\\1\\d{4}$");
        
        }
    
    
    public static boolean ValidacionDias(String Fecha){
        
        //  21/03/1999
        int Año = Integer.parseInt(Fecha.substring(6, 10));
        Fecha = Fecha.substring(0, 5);
         
        System.out.println(Año);
        
        if ((Año % 4 == 0) && ((Año % 100 != 0) || (Año % 400 == 0))){
            
	if(Fecha.equals("30/02") || Fecha.equals("31/02") || Fecha.equals("31/04") || Fecha.equals("31/06") || Fecha.equals("31/09") ||
           Fecha.equals("31/11")|| Fecha.equals("29/02")){
      
            return true;
        
        }else{
        
            return false;
           
        }
       
        }else{
	
           if(Fecha.equals("30/02") || Fecha.equals("31/02") || Fecha.equals("31/04") || Fecha.equals("31/06") || Fecha.equals("31/09") ||
           Fecha.equals("31/11")){
      
            return true;
        
        }else{
        
            return false;
           
        }   }   }
    
         
       public static boolean ValidacionDecimales(String Decimal){
        
        return Decimal.matches("^[1-9]{1}[0-9]{1,4}+\\.[0-9]{2}$");
                
        }
       
       
       private void GenerarReporte(){
       
        
             Connection con;
             
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            
        try{
        
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Microcosmos?zeroDateTimeBehavior=convertToNull", "root", "12345");
        
        JasperReport report = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/ReportePrecioHistorico.jasper"));
        
        Map parametros = new HashMap<String, Object>();
        
        parametros.put("Empleado", N.getNombre());
   
        JasperPrint jprint = JasperFillManager.fillReport(report,parametros, con );
        JasperViewer view = new JasperViewer(jprint,false);
        view.setTitle("Reporte Articulos");
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        view.setIconImage(icon);
        

        final JRViewer viewer = new JRViewer(jprint);
            JRSaveContributor[] contrbs = viewer.getSaveContributors();

            for (JRSaveContributor saveContributor : contrbs)
            {
                if (!(saveContributor instanceof net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor
                    || saveContributor instanceof net.sf.jasperreports.view.save.JRPdfSaveContributor))
            viewer.removeSaveContributor(saveContributor);
        }
        view.setContentPane(viewer);
        view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        view.setVisible(true);
        

        view.show();

      
    }catch(Exception ex){
        
        log.Logs("PantallaPrecioHistorica", "Error al generar reporte: " + ex);
          
        }
        }catch(Exception ex){
        
        log.Logs("PantallaPrecioHistorica", "Error al generar reporte: " + ex);
          
        }
                
          }
        
       
     public void RestringirPermisos(boolean Buscar,boolean Imprimir){
        
      
      if(Buscar == false){
       
        Btn_BuscarIdArticulo.setEnabled(false);
        Btn_BuscarPrecio.setEnabled(false);
        Btn_BuscarArticulo.setEnabled(false);
        Btn_BuscarFechaInicio.setEnabled(false);
          
    }

      if(Imprimir == false){
          
        Btn_Imprimir.setEnabled(false);
                
    }
      
     
    }
          
          
    public boolean ValidarBuscar(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where buscarPrecioHistorico = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
      
    public boolean ValidarImprimir(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();

    
    String select = "SELECT idPermisos FROM Permisos Where imprimirPrecioHistorico = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_BuscarArticulo;
    private javax.swing.JButton Btn_BuscarFechaInicio;
    private javax.swing.JButton Btn_BuscarIdArticulo;
    private javax.swing.JButton Btn_BuscarPrecio;
    private javax.swing.JButton Btn_Imprimir;
    private javax.swing.JButton Btn_Limpiar;
    private javax.swing.JButton Btn_Regresar;
    private javax.swing.JTable Tbl_PrecioHistorico;
    private javax.swing.JTextField Txt_Fecha;
    private javax.swing.JTextField Txt_IdArticulo;
    private javax.swing.JTextField Txt_NombreArticulo;
    private javax.swing.JTextField Txt_Precio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
