/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.Articulo;
import com.clases.DetalleVenta;
import com.clases.TipoDePago;
import com.clases.Venta;
import com.dao.ArticuloJpaController;
import com.dao.DetalleVentaJpaController;
import com.dao.TipoDePagoJpaController;
import com.dao.VentaJpaController;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ariel
 */
public class FmrVentas extends javax.swing.JFrame {

DefaultTableModel t;
static int IdCliente;
static int IdParametro;
static double cambio;
static Logs log = new Logs();    
EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");

TipoDePagoJpaController daoTipoDePago = new TipoDePagoJpaController();  
ArticuloJpaController daoArticulo = new ArticuloJpaController();
VentaJpaController daoVenta = new VentaJpaController();
DetalleVentaJpaController daoDetalleVenta = new DetalleVentaJpaController();
   
Articulo objArticulo = new Articulo();    
TipoDePago objTipoDePago = new TipoDePago();
NombreEmpleado N = new NombreEmpleado();
Venta objVenta = new Venta();
DetalleVenta objDetalleVenta = new DetalleVenta();
    
    public FmrVentas() {
        initComponents();
        this.setLocationRelativeTo(null);
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        ActualizarArticulo();
        listaTipoDePago();
        Btn_Agregar.setEnabled(false);
        Btn_Eliminar.setEnabled(false);
        Txt_NombreCliente.setText("Consumidor Final");
        IdCliente = 6;
        cambio = 0;
        Txt_ISV.setText("0.0");
        Txt_SubTotal.setText("0.0");
        Txt_TotalPago.setText("0.0");
        RestringirPermisos(ValidarGenerarFactura(N.id),ValidarMostrarVentas(N.id),ValidarBuscar(N.id));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Txt_Documento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Txt_IdArticulo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Btn_Buscar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Txt_NombreArticulo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Btn_Agregar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        Txt_Tarjeta = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Txt_Cantidad = new javax.swing.JTextField();
        Btn_BuscarArticulo = new javax.swing.JButton();
        Btn_BuscarIdArticulo = new javax.swing.JButton();
        Btn_Eliminar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        Txt_Monto = new javax.swing.JTextField();
        Txt_BuscarCliente = new javax.swing.JTextField();
        Btn_BuscarNombre = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tbl_venta = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tbl_Articulos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Txt_TotalPago = new javax.swing.JTextField();
        Txt_ISV = new javax.swing.JTextField();
        Txt_SubTotal = new javax.swing.JTextField();
        Btn_Regresar = new javax.swing.JButton();
        Btn_GenerarFactura = new javax.swing.JButton();
        Btn_CancelarCompra = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        Btn_MostrarVentas = new javax.swing.JButton();
        Txt_NombreCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventas - Microcosmos");
        setBackground(new java.awt.Color(60, 63, 65));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setToolTipText("");
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("MICROCOSMOS");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(60, 63, 65));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(800, 230));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 230));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setVerifyInputWhenFocusTarget(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Documento cliente");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_Documento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Txt_DocumentoFocusLost(evt);
            }
        });
        Txt_Documento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_DocumentoActionPerformed(evt);
            }
        });
        Txt_Documento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_DocumentoKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Nombre cliente");
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("ID art√≠culo");
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_IdArticulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Txt_IdArticuloFocusLost(evt);
            }
        });
        Txt_IdArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_IdArticuloActionPerformed(evt);
            }
        });
        Txt_IdArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_IdArticuloKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Ingresar Datos");
        jLabel6.setMaximumSize(new java.awt.Dimension(299, 41));
        jLabel6.setMinimumSize(new java.awt.Dimension(299, 41));
        jLabel6.setPreferredSize(new java.awt.Dimension(299, 41));

        Btn_Buscar.setText("Buscar");
        Btn_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Nombre art√≠culo");
        jLabel8.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_NombreArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NombreArticuloKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Cantidad");
        jLabel10.setPreferredSize(new java.awt.Dimension(80, 20));

        Btn_Agregar.setText("Agregar");
        Btn_Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AgregarActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox1PropertyChange(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Tipo de pago");
        jLabel15.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_Tarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_TarjetaKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("N√∫mero de tarjeta");
        jLabel16.setPreferredSize(new java.awt.Dimension(80, 20));

        Txt_Cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_CantidadKeyTyped(evt);
            }
        });

        Btn_BuscarArticulo.setText("Buscar");
        Btn_BuscarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarArticuloActionPerformed(evt);
            }
        });

        Btn_BuscarIdArticulo.setText("Buscar");
        Btn_BuscarIdArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarIdArticuloActionPerformed(evt);
            }
        });

        Btn_Eliminar.setText("Eliminar");
        Btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EliminarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Monto en efectivo");
        jLabel9.setToolTipText("");

        Txt_Monto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Txt_MontoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_MontoKeyTyped(evt);
            }
        });

        Btn_BuscarNombre.setText("Buscar");
        Btn_BuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_IdArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_BuscarIdArticulo))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Txt_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(Txt_Documento, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Btn_Buscar)
                                        .addGap(87, 87, 87)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(134, 134, 134)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Txt_Tarjeta, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(Txt_Monto)
                                    .addComponent(Txt_BuscarCliente)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Txt_NombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Btn_BuscarArticulo)
                                .addGap(37, 37, 37)
                                .addComponent(Btn_Agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_BuscarNombre)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Txt_Documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Btn_Buscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_IdArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_BuscarIdArticulo)
                            .addComponent(Btn_Eliminar)
                            .addComponent(Btn_Agregar)
                            .addComponent(Btn_BuscarArticulo)
                            .addComponent(Txt_NombreArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_BuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_BuscarNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Txt_Tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(Txt_Monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(351, 351, 351))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(417, 417, 417))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Tbl_venta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Art√≠culo", "Talla", "Precio", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl_venta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_ventaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tbl_venta);
        if (Tbl_venta.getColumnModel().getColumnCount() > 0) {
            Tbl_venta.getColumnModel().getColumn(0).setResizable(false);
            Tbl_venta.getColumnModel().getColumn(1).setResizable(false);
            Tbl_venta.getColumnModel().getColumn(2).setResizable(false);
            Tbl_venta.getColumnModel().getColumn(3).setResizable(false);
            Tbl_venta.getColumnModel().getColumn(4).setResizable(false);
            Tbl_venta.getColumnModel().getColumn(5).setResizable(false);
        }

        Tbl_Articulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Art√≠culo", "Precio", "Stock", "Talla"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl_Articulos.getTableHeader().setReorderingAllowed(false);
        Tbl_Articulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_ArticulosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Tbl_Articulos);
        if (Tbl_Articulos.getColumnModel().getColumnCount() > 0) {
            Tbl_Articulos.getColumnModel().getColumn(0).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(1).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(2).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(3).setResizable(false);
            Tbl_Articulos.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel3.setBackground(new java.awt.Color(60, 63, 65));

        Txt_TotalPago.setEditable(false);
        Txt_TotalPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_TotalPagoActionPerformed(evt);
            }
        });

        Txt_ISV.setEditable(false);

        Txt_SubTotal.setEditable(false);

        Btn_Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/return.png"))); // NOI18N
        Btn_Regresar.setText("Regresar");
        Btn_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarActionPerformed(evt);
            }
        });

        Btn_GenerarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir.png"))); // NOI18N
        Btn_GenerarFactura.setText("Generar Venta");
        Btn_GenerarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_GenerarFacturaActionPerformed(evt);
            }
        });

        Btn_CancelarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Cancelar.png"))); // NOI18N
        Btn_CancelarCompra.setText("Cancelar");
        Btn_CancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CancelarCompraActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Total a pagar");
        jLabel19.setPreferredSize(new java.awt.Dimension(80, 20));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("I.S.V 15%");
        jLabel21.setPreferredSize(new java.awt.Dimension(80, 20));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("SubTotal");
        jLabel22.setPreferredSize(new java.awt.Dimension(80, 20));

        Btn_MostrarVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Registro.png"))); // NOI18N
        Btn_MostrarVentas.setText("Mostrar Ventas");
        Btn_MostrarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_MostrarVentasActionPerformed(evt);
            }
        });

        Txt_NombreCliente.setEditable(false);
        Txt_NombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NombreClienteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Cliente");
        jLabel7.setPreferredSize(new java.awt.Dimension(80, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_NombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_ISV, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Btn_MostrarVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(Btn_GenerarFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(Btn_CancelarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Txt_TotalPago, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_CancelarCompra)
                    .addComponent(Btn_GenerarFactura)
                    .addComponent(Btn_MostrarVentas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_TotalPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_ISV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_NombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Txt_DocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Txt_DocumentoFocusLost

    }//GEN-LAST:event_Txt_DocumentoFocusLost

    private void Txt_DocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_DocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_DocumentoActionPerformed

    private void Txt_NombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NombreClienteKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_NombreCliente.getText();

        if((evt.getKeyChar() == 22)){

            Txt_NombreCliente.setText(Texto.substring(0, 20));

        }

        if (Txt_NombreCliente.getText().length() >= 20){

            evt.consume();

        }

        if (Txt_NombreCliente.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_NombreCliente.setText(Texto);

        }

    }//GEN-LAST:event_Txt_NombreClienteKeyTyped

    private void Txt_IdArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_IdArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_IdArticuloActionPerformed

    private void Txt_IdArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_IdArticuloKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_IdArticulo.getText();
        
        if(c < '0' || c > '9') {
        
            evt.consume();
                    
        }

        if((evt.getKeyChar() == 22)){

            Txt_IdArticulo.setText(Texto.substring(0, 8));

        }

        if (Txt_IdArticulo.getText().length() >= 8){

            evt.consume();

        }

    }//GEN-LAST:event_Txt_IdArticuloKeyTyped

    private void Txt_TotalPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_TotalPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_TotalPagoActionPerformed

    private void Btn_AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AgregarActionPerformed
        
        if(Txt_Cantidad.getText().length() < 1 ){
        
            JOptionPane.showMessageDialog(this, "La cantidad no puede estar vacia","Error",JOptionPane.ERROR_MESSAGE);
        
        }else if(Integer.parseInt(Txt_Cantidad.getText()) == 0){
        
            JOptionPane.showMessageDialog(this, "La cantidad no puede ser cero","Error",JOptionPane.ERROR_MESSAGE);
        
        }else{
            
            LLenarTablaVenta();
            Txt_IdArticulo.setText("");
            Txt_NombreArticulo.setText("");
            Txt_Cantidad.setText("");
            Btn_Agregar.setEnabled(false);
            Calculos();
            
        }
    }//GEN-LAST:event_Btn_AgregarActionPerformed

    private void Btn_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarActionPerformed
        
        FmrMen√∫ M = new FmrMen√∫();
        M.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarActionPerformed

    private void Btn_MostrarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_MostrarVentasActionPerformed
       
        FmrRegistroVenta v = new FmrRegistroVenta();
        v.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_MostrarVentasActionPerformed

    private void Btn_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarActionPerformed
        
     try{
     
         Txt_NombreCliente.setText(GetNombre_ApellidoCliente(Txt_Documento.getText()));
     
     }catch(Exception e){
         
         JOptionPane.showMessageDialog(this, "El cliente que usted busca no existe","Alerta",JOptionPane.ERROR_MESSAGE);
         IdCliente = 6;
         Txt_NombreCliente.setText("Consumidor Final");
     
     }
    }//GEN-LAST:event_Btn_BuscarActionPerformed

    private void Tbl_ArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_ArticulosMouseClicked
        
        int fila =  Tbl_Articulos.getSelectedRow();
        
        if(ValidarGenerarFactura(N.id) == true){
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else{
        
        Btn_Agregar.setEnabled(true);
        String Id = Tbl_Articulos.getValueAt(fila, 0).toString();
        String Nombre = Tbl_Articulos.getValueAt(fila, 1).toString();
               
        
        Txt_IdArticulo.setText(Id);
        Txt_NombreArticulo.setText(Nombre);
          

        }  
        }
        
    }//GEN-LAST:event_Tbl_ArticulosMouseClicked

    private void Txt_IdArticuloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Txt_IdArticuloFocusLost
      

        
        
        
    }//GEN-LAST:event_Txt_IdArticuloFocusLost

    private void Tbl_ventaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_ventaMouseClicked
         
        int fila =  Tbl_venta.getSelectedRow();
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else{
        
        Btn_Eliminar.setEnabled(true);
        
        } 
        
    }//GEN-LAST:event_Tbl_ventaMouseClicked

    private void Btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EliminarActionPerformed
         
        int fila =  Tbl_venta.getSelectedRow();
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
        }else{
        
        try{
        t = (DefaultTableModel) Tbl_venta.getModel();
        t.removeRow(fila);
        Btn_Eliminar.setEnabled(false);
        Calculos();
        }catch(Exception ex){
        
        log.Logs("PantallaVenta", "Error al eliminar: " + ex);
          
        }   
        } 
        
    }//GEN-LAST:event_Btn_EliminarActionPerformed

    private void Btn_CancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CancelarCompraActionPerformed

        try{
        Cancelar();
        }catch(Exception ex){
        
         log.Logs("PantallaVenta", "Error al cancelar: " + ex);
          
        }
             
    }//GEN-LAST:event_Btn_CancelarCompraActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
             
        if(String.valueOf(jComboBox1.getSelectedItem()).equals("Seleccione")){

        Txt_Tarjeta.setEditable(false);
        Txt_Monto.setEditable(false);
        
        Txt_Tarjeta.setText("");
        Txt_Monto.setText("");
        
        
        }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Efectivo")){
            
        Txt_Tarjeta.setEditable(false);
        Txt_Monto.setEditable(true);
        
        Txt_Tarjeta.setText("");
        
        }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Tarjeta de credito")){
            
        Txt_Tarjeta.setEditable(true);
        Txt_Monto.setEditable(false);
        
        Txt_Monto.setText("");
        
        
        }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Mixto")){
            
        Txt_Tarjeta.setEditable(true);
        Txt_Monto.setEditable(true);
        
        }else{
            
        Txt_Tarjeta.setEditable(false);
        Txt_Monto.setEditable(false);
        Txt_Tarjeta.setText("");
        Txt_Monto.setText("");
        
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox1PropertyChange
        
       
        
    }//GEN-LAST:event_jComboBox1PropertyChange

    private void Btn_BuscarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarArticuloActionPerformed

      try{        
        ActualizarArticulo2(buscarArticulo(Txt_NombreArticulo.getText()));
      }catch(Exception ex){
        
        log.Logs("PantallaVenta", "Error al buscar: " + ex);
          
        }   
    }//GEN-LAST:event_Btn_BuscarArticuloActionPerformed

    private void Btn_BuscarIdArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarIdArticuloActionPerformed
         
        try{
         ActualizarArticulo2(buscarIdArticulo(Txt_IdArticulo.getText()));
        }catch(Exception ex){
        
        log.Logs("PantallaVenta", "Error al buscar: " + ex);
          
        }   
        
    }//GEN-LAST:event_Btn_BuscarIdArticuloActionPerformed

    private void Btn_GenerarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_GenerarFacturaActionPerformed

       if(Tbl_venta.getRowCount() == 0){
       
           JOptionPane.showMessageDialog(this, "Para poder facturar debe de registrar al menos un art√≠culo","Error",JOptionPane.ERROR_MESSAGE);
       
       }else if(ValidacionCai() == 0){
        
            JOptionPane.showMessageDialog(this, "No hay ning√∫n CAI disponible para facturar, favor registrar otro CAI","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Seleccione")){
        
            JOptionPane.showMessageDialog(this, "Debe de seleccionar un tipo de pago","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Tarjeta de credito") && Txt_Tarjeta.getText().length() < 15){
        
            JOptionPane.showMessageDialog(this, "La tarjeta debe de contener al menos 15 n√∫meros","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Efectivo") && ValidacionDecimales(Txt_Monto.getText())== false){
        
            JOptionPane.showMessageDialog(this, "El rango del monto est√° entre 10.00 - 99999.99","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Efectivo") && (Double.parseDouble(Txt_Monto.getText()) < Double.parseDouble(Txt_TotalPago.getText()))){
        
            JOptionPane.showMessageDialog(this, "El monto no puede ser menor al total a pagar","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Mixto") && ValidacionDecimales(Txt_Monto.getText())== false){
        
            JOptionPane.showMessageDialog(this, "El rango del monto est√° entre 10.00 - 99999.99","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Mixto") && (Double.parseDouble(Txt_Monto.getText()) >= Double.parseDouble(Txt_TotalPago.getText()))){
        
            JOptionPane.showMessageDialog(this, "En pago mixto, el monto no puede cubrir el total a pagar","Error",JOptionPane.ERROR_MESSAGE);
        
       }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Mixto") && Txt_Tarjeta.getText().length() < 15){
        
            JOptionPane.showMessageDialog(this, "La tarjeta debe de contener al menos 15 n√∫meros","Error",JOptionPane.ERROR_MESSAGE);
        
       }else{
 
       try{
            
            LlenarVenta();
            LlenarDetalleVenta();
            JOptionPane.showMessageDialog(this, "Venta realizada con √©xito");
            GenerarFactura();
            Cancelar();
            DesactivarFactura();
            
        } catch(Exception ex){
        
        log.Logs("PantallaVenta", "Error al llenar venta: " + ex);
          
        }  
       }
    
     
        
    }//GEN-LAST:event_Btn_GenerarFacturaActionPerformed

    private void Txt_MontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_MontoKeyReleased
         
        
    }//GEN-LAST:event_Txt_MontoKeyReleased

    private void Txt_MontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_MontoKeyTyped
        
          
        char c = evt.getKeyChar();
        String Texto = Txt_Monto.getText();
        
        
        
        
        if(c < '0' || c > '9') {

            if(c == 46){
            }
            else{
            evt.consume();
            }
             
        }
        
         if (Txt_Monto.getText().length() >= 8){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Monto.setText(Texto.substring(0, 8));
                    
        }
        
    }//GEN-LAST:event_Txt_MontoKeyTyped

    private void Txt_DocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_DocumentoKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_Documento.getText();
        
         if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z')&&(c < '0' || c > '9')){
        
            evt.consume();
        
        }
        
          if (Txt_Documento.getText().length() >= 20){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Documento.setText(Texto.substring(0, 20));
                    
        }
        
    }//GEN-LAST:event_Txt_DocumentoKeyTyped

    private void Txt_TarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_TarjetaKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_Tarjeta.getText();
       
        if(c < '0' || c > '9') {
        
            //consume no valida los datos
            evt.consume();
                     
        }
       
        
        
        if (Txt_Tarjeta.getText().length() >= 16){
        
        evt.consume();
        
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Tarjeta.setText(Texto.substring(0, 15));
                    
        }
        
    }//GEN-LAST:event_Txt_TarjetaKeyTyped

    private void Txt_CantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_CantidadKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_Cantidad.getText();
       
        if(c < '0' || c > '9') {
        
            evt.consume();
                    
        }
        
        if((evt.getKeyChar() == 22)){
        
            Txt_Cantidad.setText(Texto.substring(0, 5));
                    
        }
        
        if (Txt_Cantidad.getText().length() >= 5){
        
        evt.consume();
        
        }
        
    }//GEN-LAST:event_Txt_CantidadKeyTyped

    private void Txt_NombreArticuloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NombreArticuloKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_NombreArticulo.getText();

        if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z')){

            if(c == '√°' || c == '√©' || c == '√≠' || c == '√≥' || c == '√∫' || c == 47 || c == 32 || c == 45){
            }
            else{
             evt.consume();
            }

        }
      
        if (Txt_NombreArticulo.getText().length() >= 50){
        
        evt.consume();
        
        }
        
        
         if((evt.getKeyChar() == 22)){
        
            Txt_NombreArticulo.setText(Texto.substring(0, 50));
                    
        }
        
        if (Txt_NombreArticulo.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_NombreArticulo.setText(Texto);

        }
        
    }//GEN-LAST:event_Txt_NombreArticuloKeyTyped

    private void Btn_BuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarNombreActionPerformed
       
        try{
     
         Txt_NombreCliente.setText(GetNombre_ApellidoCliente2(Txt_BuscarCliente.getText()));
     
     }catch(Exception e){
         
         JOptionPane.showMessageDialog(this, "El cliente que usted busca no existe","Alerta",JOptionPane.ERROR_MESSAGE);
         IdCliente = 6;
         Txt_NombreCliente.setText("Consumidor Final");
     
     }
        
    }//GEN-LAST:event_Btn_BuscarNombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmrVentas().setVisible(true);
            }
        });
    }
    
    
    private void GenerarFactura(){
       
        
             Connection con;
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            
        try{
        
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Microcosmos?zeroDateTimeBehavior=convertToNull", "root", "12345");
        
        JasperReport report = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/Factura.jasper"));
        
        Map parametros = new HashMap<String, Object>();
        
        parametros.put("NumeroFactura", FormatoFactura(IdVenta()-1));
        parametros.put("Vendedor", N.getNombre());
        parametros.put("CAI", GetNombreParamtetro(IdParametro));
        parametros.put("Cliente", Txt_NombreCliente.getText());
        parametros.put("RTN", GetRTN(IdCliente));
        parametros.put("SubTotal", Txt_SubTotal.getText());
        parametros.put("ISV", Txt_ISV.getText());
        parametros.put("TotalPago", Txt_TotalPago.getText());
        parametros.put("Cambio", String.valueOf(cambio));
        
        
        JasperPrint jprint = JasperFillManager.fillReport(report,parametros, con );
        JasperViewer view = new JasperViewer(jprint,false);
        view.setTitle("Factura "+FormatoFactura(IdVenta()-1));
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        view.setIconImage(icon);
        view.show();

      
    }catch(Exception e){
    
        e.getMessage();
    
    }
        }catch(Exception e){
    
        e.getMessage();
    
    }
                
          }
       
    
     private void Calculos(){
       
        double Subtotal = 0;
        double TotalPago;
   
        int fila = Tbl_venta.getRowCount();
        t = (DefaultTableModel) Tbl_venta.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        Subtotal = Subtotal + Double.parseDouble(t.getValueAt(i, 5).toString());
                   
        }
        
        TotalPago = (Subtotal * 0.15) + Subtotal;
        
        DecimalFormat df = new DecimalFormat("#.00");
        
        Txt_ISV.setText(String.valueOf(df.format(Subtotal * 0.15)));
        Txt_SubTotal.setText(String.valueOf(df.format(Subtotal)));
        Txt_TotalPago.setText(String.valueOf(df.format(TotalPago)));
                
          }
    
    public void listaTipoDePago(){
  
         jComboBox1.removeAllItems();
  
         List<TipoDePago> tipoDePago = this.daoTipoDePago.findTipoDePagoEntities();
  
         jComboBox1.addItem("Seleccione");
      
         for(TipoDePago TipoDePago : tipoDePago){
             
             if(TipoDePago.isActivoTipoDePago() == true){
             
             String lista = TipoDePago.getNombreTipoDePago();
             jComboBox1.addItem(lista);
             
             }              
                    }
  } 
    
    
    private void ActualizarArticulo(){
       
            DefaultTableModel tl = new DefaultTableModel();
            Tbl_Articulos.setModel(tl);
            tl.addColumn("Id");
            tl.addColumn("Art√≠culo");
            tl.addColumn("Precio");
            tl.addColumn("Stock Actual");
            tl.addColumn("Talla");        
        
            List<Articulo> articulo = this.daoArticulo.findArticuloEntities();
        
          
            for(Articulo Articulo : articulo){
               
                 if(Articulo.isActivoArticulo() == true ){
                 
                    tl.addRow(
                    new Object[]{                       
                        
                        Articulo.getIdArticulo(),
                        Articulo.getNombreArticulo(),
                        Articulo.getPrecioArticulo(),
                        Articulo.getStock(),
                        GetNombreTalla(Articulo.getIdTalla()),
                                          
                    });
                                 
                 }
                

            }
       
       
       }
    
    private void ActualizarArticulo2(List<Articulo> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            int fila = Tbl_Articulos.getRowCount();
            t = (DefaultTableModel) Tbl_Articulos.getModel();
                      
            for(int i = fila-1 ; i >= 0 ; i--){
       
             t.removeRow(i);
                    
              }
            
            List<Articulo> articulo = lista;
        
          
            for(Articulo Articulo : articulo){
               
                 if(Articulo.isActivoArticulo() == true ){
                 
                    t.addRow(
                    new Object[]{
                        
                        
                        Articulo.getIdArticulo(),
                        Articulo.getNombreArticulo(),
                        Articulo.getPrecioArticulo(),
                        Articulo.getStock(),
                        GetNombreTalla(Articulo.getIdTalla()),
                                          
                    });
                                 
                 }
                
            }     
       
       }
    
    
    public List<Articulo> buscarArticulo(String Nombres){
       
           Articulo a;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "SELECT a From Articulo a WHERE a.nombreArticulo LIKE'"+ Nombres + "%'";
           Query query = em.createQuery(select);
           List<Articulo> lista = query.getResultList();
           return lista;
           
       }
    
    public List<Articulo> buscarIdArticulo(String ID){
       
           Articulo a;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select a From Articulo a WHERE idArticulo LIKE '"+ ID +"%'";
           Query query = em.createQuery(select);
           List<Articulo> lista = query.getResultList();
           return lista;
           
       }
    
    private void LLenarTablaVenta(){
       
                                  
        int fila =  Tbl_Articulos.getSelectedRow();
        if(fila == -1){
        
        JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila.");
        
        }else if(0 > (Integer.parseInt(Tbl_Articulos.getValueAt(fila, 3).toString()) - Integer.parseInt(Txt_Cantidad.getText())) ){
        
        JOptionPane.showMessageDialog(this, "La cantidad sobrepasa al n√∫mero de art√≠culos en existencia.","Alerta",JOptionPane.ERROR_MESSAGE);
        
        
        }else if(GetStockMin(Tbl_Articulos.getValueAt(fila, 0).toString()) > (Integer.parseInt(Tbl_Articulos.getValueAt(fila, 3).toString()) - Integer.parseInt(Txt_Cantidad.getText())) ){
        
        JOptionPane.showMessageDialog(this, "El Stock m√≠nimo de este articulo es "+GetStockMin(Tbl_Articulos.getValueAt(fila, 0).toString())+", favor solicitar compra.","Alerta",JOptionPane.WARNING_MESSAGE);
        
         t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        String Id = Tbl_Articulos.getValueAt(fila, 0).toString();
        String Nombre = Tbl_Articulos.getValueAt(fila, 1).toString();
        String Precio = Tbl_Articulos.getValueAt(fila, 2).toString();
        String Cantidad= Txt_Cantidad.getText().toString();
        String Talla = Tbl_Articulos.getValueAt(fila, 4).toString();
        double X= (Integer.parseInt(Cantidad) * Double.parseDouble(Precio));
        String Total = String.valueOf(X);
        
        t = (DefaultTableModel) Tbl_venta.getModel();
        String Articulos[] ={Id,Nombre,Talla,Precio,Cantidad,Total};
        t.addRow(Articulos);
        }else{
           
         t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        String Id = Tbl_Articulos.getValueAt(fila, 0).toString();
        String Nombre = Tbl_Articulos.getValueAt(fila, 1).toString();
        String Precio = Tbl_Articulos.getValueAt(fila, 2).toString();
        String Cantidad= Txt_Cantidad.getText().toString();
        String Talla = Tbl_Articulos.getValueAt(fila, 4).toString();
        double X= (Integer.parseInt(Cantidad) * Double.parseDouble(Precio));
        String Total = String.valueOf(X);
        
        t = (DefaultTableModel) Tbl_venta.getModel();
        String Articulos[] ={Id,Nombre,Talla,Precio,Cantidad,Total};
        t.addRow(Articulos);
     
        }   
                
          }
    
     private static String GetNombreTalla(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreTalla FROM Talla WHERE idTalla = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          }         
   
          private static int GetIdTalla(String Nombre){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idTalla FROM Talla WHERE nombreTalla = '"+ Nombre+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }  
          
              private static String GetNombre_ApellidoCliente(String DNI){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreCliente FROM Clientes WHERE documento = '"+ DNI+ "' AND activoCliente = true";
              String select2 = "SELECT apellidoCliente FROM Clientes WHERE documento = '"+ DNI+ "' AND activoCliente = true";
              Query query = em.createQuery(select);
              Query query2 = em.createQuery(select2);
              String select3= "SELECT idCliente FROM Clientes WHERE documento = '"+ DNI+ "' AND activoCliente = true";
              Query query3 = em.createQuery(select3);
              
              IdCliente = Integer.parseInt(query3.getSingleResult().toString());
    
              return query.getSingleResult().toString()+" "+query2.getSingleResult().toString() ;
                           
            
          } 
              
              
              private static String GetNombre_ApellidoCliente2(String Cliente){
                                  
              String nombre = Cliente.split(" ")[0];
              String apellido = Cliente.split(" ")[1];
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();

              String select = "SELECT idCliente FROM Clientes WHERE nombreCliente = '"+ nombre+ "' AND apellidoCliente = '"+ apellido+ "' AND activoCliente = true";
              Query query = em.createQuery(select);              
              
              IdCliente = Integer.parseInt(query.getSingleResult().toString());
    
              return Cliente;
                           
            
          } 
              
          
        private void Cancelar(){
          
        int fila = Tbl_venta.getRowCount();
        t = (DefaultTableModel) Tbl_venta.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        t.removeRow(i);
                   
        }
        
        LimpiarVenta();
        ActualizarArticulo2(buscarArticulo("")); 
        Txt_SubTotal.setText("0.0");
        Txt_TotalPago.setText("0.0");
        Txt_ISV.setText("0.0");
          
          }
              
        private void LimpiarVenta(){
     
          try{
          Txt_Documento.setText("");
          Txt_NombreCliente.setText("Consumidor Final");
          jComboBox1.setSelectedIndex(0);
          Txt_Tarjeta.setText("");
          Txt_Cantidad.setText("");
          Txt_Monto.setText("");
          Txt_IdArticulo.setText("");
          Txt_NombreArticulo.setText("");
          Btn_Agregar.setEnabled(false);
          Btn_Eliminar.setEnabled(false);
          Txt_Tarjeta.setEditable(false);
          Txt_Monto.setEditable(false);
          }catch(Exception ex){
        
         log.Logs("PantallaVenta", "Error al limpiar: " + ex);
          
        }

     }
        
        private static int GetStockMin(String ID){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT stockMinimo FROM Articulo WHERE idArticulo = '"+ ID+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          }
        
        
        private void LlenarVenta(){
        
            objVenta.setIdVenta(IdVenta());
            objVenta.setFechaVenta(Timestamp.valueOf(fecha_Hora_Actual()));
            objVenta.setImpuesto(Double.parseDouble(Txt_ISV.getText()));
            objVenta.setSubTotal(Double.parseDouble(Txt_SubTotal.getText()));
            objVenta.setTotal(Double.parseDouble(Txt_TotalPago.getText()));
            IdParametro = GetIdParametro();
            objVenta.setIdParametros(GetIdParametro());
            objVenta.setIdEmpleados(N.getId());
            objVenta.setIdTipoDePago(GetIdTipoPago(String.valueOf(jComboBox1.getSelectedItem())));
            objVenta.setIdCliente(IdCliente);
            objVenta.setIdEstado(3);
            
            objVenta.setFormato(FormatoFactura(IdVenta()));
            
            
            
            if(String.valueOf(jComboBox1.getSelectedItem()).equals("Efectivo")){
            
                objVenta.setMontoEfectivo(Double.parseDouble(Txt_TotalPago.getText()));
                cambio = Double.parseDouble(Txt_Monto.getText()) - Double.parseDouble(Txt_TotalPago.getText());
                objVenta.setMontoTarjeta(0.0);
                objVenta.setNumTarjeta("0");
                
            }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Tarjeta de credito")){
            
                cambio = 0.0;
                objVenta.setMontoEfectivo(0.0);
                objVenta.setMontoTarjeta(Double.parseDouble(Txt_TotalPago.getText()));
                objVenta.setNumTarjeta(Txt_Tarjeta.getText());
                
            }else if(String.valueOf(jComboBox1.getSelectedItem()).equals("Mixto")){
            
                cambio = 0.0;
                objVenta.setMontoEfectivo(Double.parseDouble(Txt_Monto.getText()));
                objVenta.setMontoTarjeta((Double.parseDouble(Txt_TotalPago.getText()) - Double.parseDouble(Txt_Monto.getText())));
                objVenta.setNumTarjeta(Txt_Tarjeta.getText());
            }else{
            
                cambio = 0.0;
                objVenta.setMontoEfectivo(0.0);
                objVenta.setMontoTarjeta(0.0);
                objVenta.setNumTarjeta("0");            }
                        
            
        try {
            
            daoVenta.create(objVenta);
                        
        } catch(Exception ex){
        
        log.Logs("PantallaVenta", "Error al llenar venta: " + ex);
          
        }   
       } 
        
        
        private void LlenarDetalleVenta(){
        
        int fila = Tbl_venta.getRowCount();
        t = (DefaultTableModel) Tbl_venta.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
            
            objDetalleVenta.setIdDetalleVenta(IdDetalleVenta());
            objDetalleVenta.setCantidad(Integer.parseInt(t.getValueAt(i, 4).toString()));
            objDetalleVenta.setIdVenta(IdVenta()-1);
            objDetalleVenta.setIdArticulo(Integer.parseInt(t.getValueAt(i, 0).toString()));
      
            
        try {
            daoDetalleVenta.create(objDetalleVenta);
           
        } catch(Exception ex){
        
        log.Logs("PantallaVenta", "Error al llenar detalle venta: " + ex);
          
        }     
          }
        
        
       } 
        
        
        public static String fecha_Hora_Actual(){
            
    Date fecha = new Date();
    SimpleDateFormat formatofecha = new SimpleDateFormat("YYYY-MM-dd");
    
    LocalTime hora = LocalTime.now();
    
    String FechaCompleta = formatofecha.format(fecha)+" "+hora.toString().substring(0,8) ; 
    return FechaCompleta;
    
    }
        
        
         public static int IdVenta(){
        
             EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
             EntityManager em = emf.createEntityManager();
      
             String select = "SELECT Max(idVenta)+1 FROM Venta";
   
             Query query = em.createQuery(select);
        
              if(query.getSingleResult() == null){
             
             return 1;
             
             }else{
                 
             return Integer.parseInt(query.getSingleResult().toString());
             
             }
        
        }
      
      public static int IdDetalleVenta(){
        
             EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
             EntityManager em = emf.createEntityManager();
      
             String select = "SELECT Max(idDetalleVenta)+1 FROM DetalleVenta";
   
             Query query = em.createQuery(select);
        
              if(query.getSingleResult() == null){
             
             return 1;
             
             }else{
                 
             return Integer.parseInt(query.getSingleResult().toString());
             
             }
        
        }
      
      private static int GetIdTipoPago(String Nombre){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idTipoDePago FROM TipoDePago WHERE nombreTipoDePago = '"+ Nombre+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          } 
      
      
      private static String GetRTN(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT documento FROM Clientes WHERE idCliente = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString();
            
          } 
        
         private static int GetIdParametro(){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT MIN(idParametros) FROM Parametros WHERE (now() between fechaEmision AND fechaCaducidad) AND ((SELECT MAX(idVenta) AS id FROM Venta) between facturaInicial AND facturaFinal) AND activoParametros = true";
              Query query = em.createQuery(select);
    
              
              return Integer.parseInt(query.getSingleResult().toString());
            
          }      
         
         private static int ValidacionCai(){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idParametros FROM Parametros WHERE (now() between fechaEmision AND fechaCaducidad) AND ((SELECT MAX(idVenta) AS id FROM Venta) between facturaInicial AND facturaFinal) AND activoParametros = true";
              Query query = em.createQuery(select);
    
              
              return query.getResultList().size();
            
          }    
      
        public void DesactivarFactura(){
       
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
         EntityManager em = emf.createEntityManager();
      
             em.getTransaction().begin();
             String select = "UPDATE Parametros SET activoParametros = false WHERE (SELECT MAX(idVenta) AS id FROM Venta) >= facturaFinal"; 
             Query query = em.createQuery(select);
             query.executeUpdate();
             em.getTransaction().commit();
             em.close();
       
       
       }
        
         private static String GetNombreParamtetro(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT cai FROM Parametros WHERE idParametros = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          } 
      
        private static String FormatoFactura(int numero){
    
        String s = String.format("%0" + 8 + "d", numero);
        String p = "000-001-01-"+s;
        return p;
        
    }
         
        public static boolean ValidacionDecimales(String Decimal){
        
        return Decimal.matches("^[1-9]{1}[0-9]{1,4}+\\.[0-9]{2}$");
                
        }
        
        
     public void RestringirPermisos(boolean GenerarFactura,boolean MostrarVentas,boolean Buscar){
        
      
      if(GenerarFactura == false){
       
        Btn_GenerarFactura.setEnabled(false);
          
      }
      if(MostrarVentas == false){
       
        Btn_MostrarVentas.setEnabled(false);
          
      }
      if(Buscar == false){
       
        Btn_BuscarIdArticulo.setEnabled(false);
        Btn_BuscarArticulo.setEnabled(false);
        Btn_Buscar.setEnabled(false);
        Btn_BuscarNombre.setEnabled(false);
          
      }
     
    }
          
   
        
    public boolean ValidarGenerarFactura(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where generarVentas = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
    
    public boolean ValidarMostrarVentas(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where mostrarVentas = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
    
    public boolean ValidarBuscar(int id){
        
        
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    EntityManager em = emf.createEntityManager();


    String select = "SELECT idPermisos FROM Permisos Where buscarVentas = true AND idUsuario IN (SELECT idUsuario FROM Usuarios WHERE idEmpleados = '"+ id+ "')";

    Query query = em.createQuery(select);
      
      if(query.getResultList().size() == 0){
       
          return false;
          
    }else{
        
          return true;
        
    }
     
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Agregar;
    private javax.swing.JButton Btn_Buscar;
    private javax.swing.JButton Btn_BuscarArticulo;
    private javax.swing.JButton Btn_BuscarIdArticulo;
    private javax.swing.JButton Btn_BuscarNombre;
    private javax.swing.JButton Btn_CancelarCompra;
    private javax.swing.JButton Btn_Eliminar;
    private javax.swing.JButton Btn_GenerarFactura;
    private javax.swing.JButton Btn_MostrarVentas;
    private javax.swing.JButton Btn_Regresar;
    private javax.swing.JTable Tbl_Articulos;
    private javax.swing.JTable Tbl_venta;
    private javax.swing.JTextField Txt_BuscarCliente;
    private javax.swing.JTextField Txt_Cantidad;
    private javax.swing.JTextField Txt_Documento;
    private javax.swing.JTextField Txt_ISV;
    private javax.swing.JTextField Txt_IdArticulo;
    private javax.swing.JTextField Txt_Monto;
    private javax.swing.JTextField Txt_NombreArticulo;
    private javax.swing.JTextField Txt_NombreCliente;
    private javax.swing.JTextField Txt_SubTotal;
    private javax.swing.JTextField Txt_Tarjeta;
    private javax.swing.JTextField Txt_TotalPago;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
