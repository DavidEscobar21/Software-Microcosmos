/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.Articulo;
import com.clases.DetalleVenta;
import com.clases.FacturasDevueltas;
import com.clases.Venta;
import com.dao.ArticuloJpaController;
import com.dao.DetalleVentaJpaController;
import com.dao.FacturasDevueltasJpaController;
import com.dao.VentaJpaController;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author david
 */
public class FmrRegistroVenta extends javax.swing.JFrame {

    DefaultTableModel t;
    
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
    
    VentaJpaController daoVenta = new VentaJpaController();
    ArticuloJpaController daoArticulo = new ArticuloJpaController();
    DetalleVentaJpaController  daoDetalleVenta = new DetalleVentaJpaController();
    FacturasDevueltasJpaController daoFD = new FacturasDevueltasJpaController();
    static Logs log = new Logs();
    Venta objVenta = new Venta();   
    Articulo objArticulo = new Articulo(); 
    DetalleVenta ojbDetalleVenta = new DetalleVenta();
    FacturasDevueltas objFD = new FacturasDevueltas();
    NombreEmpleado N = new NombreEmpleado();
    
    boolean Concretada;
    
    
    public FmrRegistroVenta() {
        initComponents();
        this.setLocationRelativeTo(null);
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        ActualizarVentasConcretadas(buscarFacturaVenta(""));
        Concretada = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_Venta = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tbl_Articulos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Btn_Concretadas = new javax.swing.JButton();
        Btn_Anuladas = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Txt_NumFactura = new javax.swing.JTextField();
        Btn_Buscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        Btn_Regresar = new javax.swing.JButton();
        Btn_AnularVenta = new javax.swing.JButton();
        Reporte = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Txt_Descripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de Ventas - Microcosmos");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 100));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LogoMicrocosmos.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(60, 63, 65));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(800, 230));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 230));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Ventas Realizadas");
        jLabel5.setMaximumSize(new java.awt.Dimension(299, 41));
        jLabel5.setPreferredSize(new java.awt.Dimension(299, 41));

        Tbl_Venta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Factura", "Cliente", "Empleado", "Fecha Venta", "CAI", "Tipo de Pago", "Num. Tarjeta", "Monto Tarjeta", "Monto Efectivo", "Total Pagado"
            }
        ));
        Tbl_Venta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_VentaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tbl_Venta);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Art√≠culos");
        jLabel14.setMaximumSize(new java.awt.Dimension(265, 25));
        jLabel14.setMinimumSize(new java.awt.Dimension(265, 25));
        jLabel14.setPreferredSize(new java.awt.Dimension(265, 25));

        Tbl_Articulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Articulos", "Precio", "Cantidad", "Total"
            }
        ));
        Tbl_Articulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_ArticulosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tbl_Articulos);

        jPanel3.setBackground(new java.awt.Color(60, 63, 65));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(240, 240, 240), 1, true), "MOSTRAR COMPRAS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(240, 240, 240))); // NOI18N
        jPanel3.setToolTipText("");

        Btn_Concretadas.setText("Concretadas");
        Btn_Concretadas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Concretadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ConcretadasActionPerformed(evt);
            }
        });

        Btn_Anuladas.setText("Anuladas");
        Btn_Anuladas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Anuladas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AnuladasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(Btn_Concretadas, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_Anuladas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Btn_Concretadas, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(Btn_Anuladas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(60, 63, 65));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(240, 240, 240), 1, true), "BUSCAR COMPRAS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(240, 240, 240))); // NOI18N

        Txt_NumFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NumFacturaKeyTyped(evt);
            }
        });

        Btn_Buscar.setText("Buscar");
        Btn_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("N√∫mero de Factura");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Txt_NumFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(Btn_Buscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_NumFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Buscar)
                    .addComponent(jLabel2))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(324, 324, 324))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(60, 63, 65));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setMaximumSize(new java.awt.Dimension(800, 130));
        jPanel4.setMinimumSize(new java.awt.Dimension(800, 130));

        jPanel6.setBackground(new java.awt.Color(60, 63, 65));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240)), "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(240, 240, 240))); // NOI18N

        Btn_Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/return.png"))); // NOI18N
        Btn_Regresar.setText("Regresar");
        Btn_Regresar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Regresar.setFocusPainted(false);
        Btn_Regresar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarActionPerformed(evt);
            }
        });

        Btn_AnularVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Anular.png"))); // NOI18N
        Btn_AnularVenta.setText("Anular Venta");
        Btn_AnularVenta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_AnularVenta.setFocusPainted(false);
        Btn_AnularVenta.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_AnularVenta.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_AnularVenta.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_AnularVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AnularVentaActionPerformed(evt);
            }
        });

        Reporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir.png"))); // NOI18N
        Reporte.setText("Reporte");
        Reporte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(Reporte, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(Btn_AnularVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(Reporte, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Btn_Regresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_AnularVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );

        Txt_Descripcion.setColumns(20);
        Txt_Descripcion.setRows(5);
        Txt_Descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_DescripcionKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(Txt_Descripcion);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Descripci√≥n");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel3)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tbl_VentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_VentaMouseClicked

    int fila =  Tbl_Venta.getSelectedRow();
        if(fila == -1){
        
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Fila");
        
                       
        }else{
        
        ActualizarArticulo(buscarArticulos(Tbl_Venta.getValueAt(fila, 0).toString()));
              
        
        }

    }//GEN-LAST:event_Tbl_VentaMouseClicked

    private void Tbl_ArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_ArticulosMouseClicked

    }//GEN-LAST:event_Tbl_ArticulosMouseClicked

    private void Btn_ConcretadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ConcretadasActionPerformed

        try{
        ActualizarVentasConcretadas(buscarFacturaVenta(""));
        Btn_AnularVenta.setEnabled(true);
        Reporte.setEnabled(true);
        LimpiarArticulos();
        Concretada = true;
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al mostrar en pantalla: " + ex);
          
        }

    }//GEN-LAST:event_Btn_ConcretadasActionPerformed

    private void Btn_AnuladasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AnuladasActionPerformed

        try{
        ActualizarVentasAnuladas(buscarFacturaDevuelta(""));
        Btn_AnularVenta.setEnabled(false);
        Reporte.setEnabled(false);
        LimpiarArticulos();
        Concretada = false;
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al mostrar en pantalla: " + ex);
          
        }

    }//GEN-LAST:event_Btn_AnuladasActionPerformed

    private void Txt_NumFacturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NumFacturaKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_NumFactura.getText();

        if(c < '0' || c > '9') {

            if(c == 45){
                
            }else{
            evt.consume();
            }
        }

        if((evt.getKeyChar() == 22)){

            Txt_NumFactura.setText(Texto.substring(0, 19));

        }

        if (Txt_NumFactura.getText().length() >= 19){

            evt.consume();

        }

    }//GEN-LAST:event_Txt_NumFacturaKeyTyped

    private void Btn_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarActionPerformed

        if(Concretada == true){

            ActualizarVentasConcretadas(buscarFacturaVenta(Txt_NumFactura.getText()));
            Txt_NumFactura.setText("");

        }else{

            ActualizarVentasAnuladas(buscarFacturaDevuelta(Txt_NumFactura.getText()));
            Txt_NumFactura.setText("");

        }

    }//GEN-LAST:event_Btn_BuscarActionPerformed

    private void Btn_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarActionPerformed

        FmrVentas Com = new FmrVentas();
        Com.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_Btn_RegresarActionPerformed

    private void Btn_AnularVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AnularVentaActionPerformed

        int fila = Tbl_Venta.getSelectedRow();

        if(fila != -1){

            if(Txt_Descripcion.getText().length() < 8){

                JOptionPane.showMessageDialog(this, "La descripci√≥n debe de contener al menos 8 letras","Error",JOptionPane.ERROR_MESSAGE);

            }else if(validacionLetrasRepetidas(Txt_Descripcion.getText()) == false){
            
                JOptionPane.showMessageDialog(this, "No se pueden repetir 3 letras seguidas","Error",JOptionPane.ERROR_MESSAGE);
            
            }else{

                try{
                EditarVenta();
                LlenarFacturasDevueltas();
                ActualizarStock();
                LimpiarArticulos();
                ActualizarVentasConcretadas(buscarFacturaVenta(""));
                } catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al anular venta: " + ex);
          
        }
            }

        }else{

            JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento a Anular");

        }

    }//GEN-LAST:event_Btn_AnularVentaActionPerformed

    private void Txt_DescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_DescripcionKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_Descripcion.getText();

        if((evt.getKeyChar() == 22)){

            Txt_Descripcion.setText(Texto.substring(0, 99));

        }

        if (Txt_Descripcion.getText().length() >= 99){

            evt.consume();

        }

        if (Txt_Descripcion.getText().length() == 1){

            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_Descripcion.setText(Texto);

        }

    }//GEN-LAST:event_Txt_DescripcionKeyTyped

    private void ReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteActionPerformed
         
         int fila = Tbl_Venta.getSelectedRow();

        if(fila != -1){
            
            try{
            GenerarReporte();
            }catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al generar reporte: " + ex);
          
        }

        }else{

            JOptionPane.showMessageDialog(this, "Debe seleccionar el elemento a Anular");

        }
        
    }//GEN-LAST:event_ReporteActionPerformed

    
    private void EditarVenta(){
            
            int fila = Tbl_Venta.getSelectedRow();
                        
            
        try {
            
            AnularFactura(GetIdVenta(Tbl_Venta.getValueAt(fila, 0).toString()));
            
          } catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al editar venta: " + ex);
          
        }
        
       }  
    
    
    private void LlenarFacturasDevueltas(){
            
            int fila = Tbl_Venta.getSelectedRow();
                      
            objFD.setIdEmpleados(N.getId());
            objFD.setIdVenta(GetIdVenta(Tbl_Venta.getValueAt(fila, 0).toString()));
            objFD.setFechaDevolucion(Timestamp.valueOf(fecha_Hora_Actual()));
            objFD.setDescripcion(Txt_Descripcion.getText());
                        
            
        try {
            
            daoFD.create(objFD);
            
          } catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al llenar facturas devueltas: " + ex);
          
        }
        
       } 
    
    
    
    
    private void ActualizarVentasConcretadas(List<Venta> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Venta.setModel(t);
            t.addColumn("Factura");
            t.addColumn("Cliente");
            t.addColumn("Empleado");
            t.addColumn("Fecha Venta");
            t.addColumn("CAI");
            t.addColumn("Tipo de pago");
            t.addColumn("Num. Tarjeta");
            t.addColumn("Monto Tarjeta");
            t.addColumn("Monto Efectivo");
            t.addColumn("Total Pagado");
            
        
            List<Venta> venta = lista;
        
          
            for(Venta Venta : venta){
               
                 if(Venta.getIdEstado() == 3){
                 
                    t.addRow(
                    new Object[]{
                        
                        Venta.getFormato(),
                        GetNombre_ApellidoCliente(Venta.getIdCliente()),
                        GetNombreEmpleado(Venta.getIdEmpleados()),
                        MostrarFecha(Venta.getFechaVenta().toString()),
                        GetCAI(Venta.getIdParametros()),
                        GetTipoPago(Venta.getIdTipoDePago()),
                        Venta.getNumTarjeta(),
                        Venta.getMontoTarjeta(),
                        Venta.getMontoEfectivo(),
                        Venta.getTotal()
                                                                  
                    });
                                 
                 }
                
            }
       
       }
    
    
    private void ActualizarVentasAnuladas(List<FacturasDevueltas> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Venta.setModel(t);
            t.addColumn("Factura");
            t.addColumn("Empleado");
            t.addColumn("Fecha Devoluci√≥n");
            t.addColumn("Descripci√≥n");
            
        
            List<FacturasDevueltas> facturasDevueltas = lista;
        
          
            for(FacturasDevueltas FacturasDevueltas : facturasDevueltas){
               
                 
                 
                    t.addRow(
                    new Object[]{
                        
                        GetFactura(FacturasDevueltas.getIdVenta()),
                        GetNombreEmpleado(FacturasDevueltas.getIdEmpleados()),                        
                        MostrarFecha(FacturasDevueltas.getFechaDevolucion().toString()),
                        FacturasDevueltas.getDescripcion()
                                          
                    });

            }      
       
       }
    
    private void ActualizarArticulo(List<DetalleVenta> lista){
       
            DefaultTableModel t = new DefaultTableModel();
            Tbl_Articulos.setModel(t);
            t.addColumn("Id");
            t.addColumn("Art√≠culo");
            t.addColumn("Precio");
            t.addColumn("Cantidad");
            t.addColumn("Total");         
        
            List<DetalleVenta> detalleVenta = lista;
        
            double s;
            for(DetalleVenta DetalleVenta : detalleVenta){
               
                   s = (Double.parseDouble(GetPrecioArticulo(DetalleVenta.getIdArticulo())) * DetalleVenta.getCantidad());
                           
                    t.addRow(
                    new Object[]{
                        
                        DetalleVenta.getIdArticulo(),
                        GetNombreArticulo(DetalleVenta.getIdArticulo()),
                        GetPrecioArticulo(DetalleVenta.getIdArticulo()),
                        DetalleVenta.getCantidad(),
                        s
                        
                                          
                    });
                                 
            }
    }
    
    
    public List<DetalleVenta> buscarArticulos(String ID){
       
           DetalleVenta d;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select d From DetalleVenta d WHERE d.idVenta IN (SELECT idVenta FROM Venta WHERE formato = '"+ ID +"')";
           Query query = em.createQuery(select);
           List<DetalleVenta> lista = query.getResultList();
           return lista;
           
       }
    
    
    public List<Venta> buscarFacturaVenta(String ID){
       
           Venta v;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "Select v From Venta v WHERE formato LIKE '"+ ID +"%'";
           Query query = em.createQuery(select);
           List<Venta> lista = query.getResultList();
           return lista;
           
       }
    
    
    
    public List<FacturasDevueltas> buscarFacturaDevuelta(String ID){
       
           FacturasDevueltas f;
             
           EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
           EntityManager em = emf.createEntityManager();
           String select = "SELECT f FROM FacturasDevueltas AS f WHERE f.idVenta IN (SELECT idVenta FROM Venta WHERE formato LIKE '"+ ID +"%')";
           Query query = em.createQuery(select);
           List<FacturasDevueltas> lista = query.getResultList();
           return lista;
           
       }
    
    private void ActualizarStock(){
     
        int fila = Tbl_Articulos.getRowCount();
        t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        AumentarStock(t.getValueAt(i, 0).toString(), t.getValueAt(i, 3).toString());
                   
        }
    }

    private static String GetNombreEmpleado(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreEmpleado FROM Empleados WHERE idEmpleados = '"+ id+ "'";
              String select2 = "SELECT apellidoEmpleado FROM Empleados WHERE idEmpleados = '"+ id+ "'";
              Query query = em.createQuery(select);
              Query query2 = em.createQuery(select2);
    
              return query.getSingleResult().toString()+" "+query2.getSingleResult().toString() ;
                           
            
          }
    
    public static String MostrarFecha(String f){
         
        String dia = f.substring(0, 4);
        String mes = f.substring(5, 7);
        String a√±o = f.substring(8, 10);
        String hora = f.substring(11, 19);
        
        return a√±o+"/"+mes+"/"+dia +" "+hora;
    
    }
    
    
    private static String GetTipoPago(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreTipoDePago FROM TipoDePago WHERE idTipoDePago = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          } 
    
    private static String GetFactura(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT formato FROM Venta WHERE idVenta = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          } 
    
    
         private static int GetIdVenta(String id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT idVenta FROM Venta WHERE formato = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return Integer.parseInt(query.getSingleResult().toString());
            
          } 
    
    private static String GetCAI(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT cai FROM Parametros WHERE idParametros = '"+ id+ "'";
              Query query = em.createQuery(select);
    
              return query.getSingleResult().toString() ;
            
          } 
    
    
    private static String GetNombre_ApellidoCliente(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreCliente FROM Clientes WHERE idCliente = '"+ id+ "'";
              String select2 = "SELECT apellidoCliente FROM Clientes WHERE idCliente = '"+ id+ "'";
              Query query = em.createQuery(select);
              Query query2 = em.createQuery(select2);            
            
    
              return query.getSingleResult().toString()+" "+query2.getSingleResult().toString() ;
                           
            
          } 
    
    
    public void AumentarStock(String IdArticulo, String Cantidad){
       
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
         EntityManager em = emf.createEntityManager();
      
             em.getTransaction().begin();
             String select = "UPDATE Articulo SET stock = (stock + "+Cantidad+") WHERE idArticulo = '"+ IdArticulo+"'"; 
             Query query = em.createQuery(select);
             query.executeUpdate();
             em.getTransaction().commit();
             em.close();
       
       
       }
    
    public void AnularFactura(int IdVenta){
       
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
         EntityManager em = emf.createEntityManager();
      
             em.getTransaction().begin();
             String select = "UPDATE Venta SET idEstado = 4 WHERE idVenta = '"+ IdVenta+"'"; 
             Query query = em.createQuery(select);
             query.executeUpdate();
             em.getTransaction().commit();
             em.close();
       
       
       }
    
    private void LimpiarArticulos(){
     
        int fila = Tbl_Articulos.getRowCount();
        t = (DefaultTableModel) Tbl_Articulos.getModel();
        
        for(int i = fila-1 ; i >= 0 ; i--){
       
        t.removeRow(i);
                   
        }

        Txt_Descripcion.setText("");
        Txt_NumFactura.setText("");
        
     }
    
    private static String GetNombreArticulo(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT nombreArticulo FROM Articulo WHERE idArticulo = '"+ id+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
    
    private static String GetPrecioArticulo(int id){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT precioArticulo FROM Articulo WHERE idArticulo = '"+ id+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
    
    public static String fecha_Hora_Actual(){
            
    Date fecha = new Date();
    SimpleDateFormat formatofecha = new SimpleDateFormat("YYYY-MM-dd");
    
    LocalTime hora = LocalTime.now();
    
    String FechaCompleta = formatofecha.format(fecha)+" "+hora.toString().substring(0,8) ; 
    return FechaCompleta;
    
    }
    
    
     private void GenerarReporte(){
       
        int fila = Tbl_Venta.getSelectedRow();
        Connection conn;
        
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            
        try{
        
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/Microcosmos?zeroDateTimeBehavior=convertToNull", "root", "12345");
        
        JasperReport report = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/ReporteFactura.jasper"));
        
        Map parametro = new HashMap<String, Object>();
        
        parametro.put("NumeroFactura", Tbl_Venta.getValueAt(fila, 0).toString());
        parametro.put("Vendedor", Tbl_Venta.getValueAt(fila, 2).toString()); 
        parametro.put("CAI",  Tbl_Venta.getValueAt(fila, 4).toString());       
        parametro.put("Cliente",  Tbl_Venta.getValueAt(fila, 1).toString());
        parametro.put("RTN", RTN(Tbl_Venta.getValueAt(fila, 1).toString()));
        parametro.put("SubTotal", Subtotal(Tbl_Venta.getValueAt(fila, 0).toString()) );
        parametro.put("ISV", Impuesto(Tbl_Venta.getValueAt(fila, 0).toString()));
        parametro.put("TotalPago",  Tbl_Venta.getValueAt(fila, 9).toString());        
        
        JasperPrint jprint = JasperFillManager.fillReport(report,parametro, conn );
        
        JasperViewer view = new JasperViewer(jprint,false);
        view.setTitle("Factura "+Tbl_Venta.getValueAt(fila, 0).toString());
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        view.setIconImage(icon);
        view.show();


    }catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al generar reporte: " + ex);
          
        }
        }catch(Exception ex){
        
        log.Logs("PantallaRegistroVenta", "Error al generar reporte: " + ex);
          
        }
                
          }
    
    
      private static String RTN(String Cliente){
        
              String nombre = Cliente.split(" ")[0];
              String apellido = Cliente.split(" ")[1];      
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT documento FROM Clientes WHERE nombreCliente = '"+ nombre+ "' AND apellidoCliente = '"+ apellido+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
     
     private static String Subtotal(String Formato){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT subTotal FROM Venta WHERE formato = '"+ Formato+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          } 
     
     private static String Impuesto(String Formato){
        
              EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
              EntityManager em = emf.createEntityManager();
              String select = "SELECT impuesto FROM Venta WHERE formato = '"+ Formato+ "'";
              Query query = em.createQuery(select);     
    
              return query.getSingleResult().toString();
                           
            
          }
     
     public boolean validacionLetrasRepetidas(String cadena)
    {
        String patron = "^(\\d|(([A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s])\\3?(?!\\3)))+$";
        Pattern patt = Pattern.compile(patron);
        Matcher comparador = patt.matcher(cadena);
        
        if (!comparador.matches()) {
            
            return false;
            
        } else {
            
            return true;
        }
    }
    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrRegistroVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmrRegistroVenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Anuladas;
    private javax.swing.JButton Btn_AnularVenta;
    private javax.swing.JButton Btn_Buscar;
    private javax.swing.JButton Btn_Concretadas;
    private javax.swing.JButton Btn_Regresar;
    private javax.swing.JButton Reporte;
    private javax.swing.JTable Tbl_Articulos;
    private javax.swing.JTable Tbl_Venta;
    private javax.swing.JTextArea Txt_Descripcion;
    private javax.swing.JTextField Txt_NumFactura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
